<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>code on Coders Digest</title>
    <link>http://abhipandey.com/categories/code/</link>
    <description>Recent content in code on Coders Digest</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 01 Sep 2023 09:00:00 +0800</lastBuildDate>
    <atom:link href="http://abhipandey.com/categories/code/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Automating Your Trading with TastyTrade&#39;s API</title>
      <link>http://abhipandey.com/2023/09/automating-your-trading-with-tastytrades-api/</link>
      <pubDate>Fri, 01 Sep 2023 09:00:00 +0800</pubDate>
      <guid>http://abhipandey.com/2023/09/automating-your-trading-with-tastytrades-api/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Update: I have provided the full code at &lt;a href=&#34;https://github.com/abhi1010/algo-utils/blob/main/trading/stocks/tasty_place_orders_manual_buy.py&#34;&gt;algo-utils::tasty_place_orders_manual_buy.py&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;In today&amp;rsquo;s fast-paced trading environment, automation can give you a significant edge. I&amp;rsquo;ve been working on a Python project that leverages the TastyTrade API to streamline various trading operations, from monitoring positions to setting automatic stop losses. In this post, I&amp;rsquo;ll walk through this integration and how it can help optimize your trading workflow.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-this-integration-does&#34;&gt;What This Integration Does&lt;/h2&gt;&#xA;&lt;p&gt;This Python library acts as a wrapper around TastyTrade&amp;rsquo;s API, making it easy to:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Seamless Data Flow: Using Google Sheets API with pandas DataFrames</title>
      <link>http://abhipandey.com/2023/02/seamless-data-flow-using-google-sheets-api-with-pandas-dataframes/</link>
      <pubDate>Mon, 27 Feb 2023 09:30:00 +0800</pubDate>
      <guid>http://abhipandey.com/2023/02/seamless-data-flow-using-google-sheets-api-with-pandas-dataframes/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Update: I have provided the full code at &lt;a href=&#34;https://github.com/abhi1010/algo-utils/blob/2d0b7bca41d3fb7a3cea20086e6054f949e3f786/trading/common/google_api_helper.py#L123&#34;&gt;algo-utils::google_api_helper&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Working with data often means juggling between different platforms and formats. Google Sheets is a powerful collaborative tool, but its real potential emerges when you can programmatically access and manipulate your spreadsheet data. In this post, I&amp;rsquo;ll walk through how to create a robust integration between Google Sheets and pandas DataFrames in Python.&lt;/p&gt;&#xA;&lt;h2 id=&#34;why-connect-google-sheets-with-pandas&#34;&gt;Why Connect Google Sheets with pandas?&lt;/h2&gt;&#xA;&lt;p&gt;Before diving into the code, let&amp;rsquo;s consider why this combination is so powerful:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Effective Log Management in Python: A Deep Dive into the get_logger Function</title>
      <link>http://abhipandey.com/2019/09/effective-log-management-in-python-a-deep-dive-into-the-get_logger-function/</link>
      <pubDate>Mon, 02 Sep 2019 09:30:00 +0800</pubDate>
      <guid>http://abhipandey.com/2019/09/effective-log-management-in-python-a-deep-dive-into-the-get_logger-function/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Update: I have provided the full code at &lt;a href=&#34;https://github.com/abhi1010/algo-utils/blob/main/trading/common/utils.py&#34;&gt;algo-utils::logger.py&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Effective logging is a critical yet often overlooked aspect of application development. A well-implemented logging system can mean the difference between hours of frustrating debugging and a quick resolution when issues arise. In this post, I&amp;rsquo;ll walk through a powerful custom logging utility function called &lt;code&gt;get_logger&lt;/code&gt; that provides flexible, configurable logging capabilities for Python applications.&lt;/p&gt;&#xA;&lt;h2 id=&#34;understanding-the-get_logger-function&#34;&gt;Understanding the &lt;code&gt;get_logger&lt;/code&gt; Function&lt;/h2&gt;&#xA;&lt;p&gt;The &lt;code&gt;get_logger&lt;/code&gt; function creates a configured logger with console output and rotating file storage. Let&amp;rsquo;s break down what it does and how to use it effectively:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mastering File Operations in Python: A Deep Dive into a Practical Utils Module</title>
      <link>http://abhipandey.com/2018/05/mastering-file-operations-in-python-a-deep-dive-into-a-practical-utils-module/</link>
      <pubDate>Sun, 20 May 2018 09:30:00 +0800</pubDate>
      <guid>http://abhipandey.com/2018/05/mastering-file-operations-in-python-a-deep-dive-into-a-practical-utils-module/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Update: I have provided the full code for this at &lt;a href=&#34;https://github.com/abhi1010/algo-utils/blob/main/trading/common/util_files.py&#34;&gt;algo-utils::util_files.py&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;File operations are the bread and butter of many Python applications. Whether you&amp;rsquo;re working with data processing, automation, or building robust applications, having a reliable set of utilities to handle files can save you countless hours of development time.&lt;/p&gt;&#xA;&lt;p&gt;In this post, I&amp;rsquo;ll explore a versatile file utilities module that I&amp;rsquo;ve been refining for various projects. This collection of functions demonstrates practical approaches to common file operation tasks that you might encounter in your day-to-day development.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Adding launcher shortcut in Fedora</title>
      <link>http://abhipandey.com/2016/11/adding-launcher-shortcut-in-fedora/</link>
      <pubDate>Sun, 13 Nov 2016 00:33:29 +0800</pubDate>
      <guid>http://abhipandey.com/2016/11/adding-launcher-shortcut-in-fedora/</guid>
      <description>&lt;p&gt;Many apps do not come pre-built in rpm format for Fedora so you&amp;rsquo;d have to download the &lt;strong&gt;tar&lt;/strong&gt; file for it.&#xA;To run the app, you would have to go to the saved folder and then either double cilck or run the command through&#xA;command line. By default, that app won&amp;rsquo;t be accessible through the &lt;code&gt;Super&lt;/code&gt; key&amp;rsquo;s universal search or&#xA;as a regular application in *&lt;strong&gt;Show Applications&lt;/strong&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Fortunately, there&amp;rsquo;s a way around and it is an easy one.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Running invoke from other folders</title>
      <link>http://abhipandey.com/2016/11/running-invoke-from-other-folders/</link>
      <pubDate>Sun, 13 Nov 2016 00:33:29 +0800</pubDate>
      <guid>http://abhipandey.com/2016/11/running-invoke-from-other-folders/</guid>
      <description>&lt;p&gt;While working on big projects, sometimes, you have &lt;code&gt;invoke&lt;/code&gt; tasks lying around&#xA;in different places. It wouldn&amp;rsquo;t make sense to merge them together&#xA;but rather help each other out as and when needed.&lt;/p&gt;&#xA;&lt;p&gt;One such way for this would be to search for invoke tasks from other folders&#xA;and run them directly when they can be used.&lt;/p&gt;&#xA;&lt;p&gt;I had to go for this approach for a monolithic repo where multiple projects&#xA;were being built in mostly similar style with minor modifications.&#xA;All of them would have the same set of commands along with same style of running those commands.&#xA;I didn&amp;rsquo;t want to set up the same &lt;code&gt;invoke&lt;/code&gt; task for all individual projects but rather&#xA;a common set of tasks that could be re-used by each one of them.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Systemd tutorial</title>
      <link>http://abhipandey.com/2016/07/systemd-tutorial/</link>
      <pubDate>Thu, 07 Jul 2016 23:26:44 +0800</pubDate>
      <guid>http://abhipandey.com/2016/07/systemd-tutorial/</guid>
      <description>&lt;p&gt;&lt;code&gt;Systemd&lt;/code&gt; usually requires two files:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;service file&lt;/li&gt;&#xA;&lt;li&gt;timer file&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;service-files&#34;&gt;Service files&lt;/h2&gt;&#xA;&lt;p&gt;Here you provide the details you&amp;rsquo;d use to&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Start/stop a service&lt;/li&gt;&#xA;&lt;li&gt;Define the type of service&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Can be &lt;em&gt;simple&lt;/em&gt;, &lt;em&gt;forking&lt;/em&gt;, &lt;em&gt;oneshot&lt;/em&gt;, &lt;em&gt;dbus&lt;/em&gt;, &lt;em&gt;notify&lt;/em&gt; or &lt;em&gt;idle&lt;/em&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;How to kill the service&lt;/li&gt;&#xA;&lt;li&gt;Ability to restart&lt;/li&gt;&#xA;&lt;li&gt;Path for starting up&lt;/li&gt;&#xA;&lt;li&gt;Timeout for the service startup or shutdown&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Service is usually made up of 3 sections:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Unit&lt;/li&gt;&#xA;&lt;li&gt;Service&lt;/li&gt;&#xA;&lt;li&gt;Install&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Usually prefer &lt;code&gt;multi-user.target&lt;/code&gt; for your installation&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;One example is as follows:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Gitlab CLI API reference</title>
      <link>http://abhipandey.com/2016/07/gitlab-cli-api-reference/</link>
      <pubDate>Tue, 05 Jul 2016 23:26:44 +0800</pubDate>
      <guid>http://abhipandey.com/2016/07/gitlab-cli-api-reference/</guid>
      <description>&lt;p&gt;Here&amp;rsquo;s a short tutorial on setting up gitlab cli for yourselves.&#xA;It is extremely user friendly and you can take almost any action that you need.&#xA;Anything that the UI provides is also available over cli or web services -&#xA;both of which have examples here.&lt;/p&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s get started.&lt;/p&gt;&#xA;&lt;h2 id=&#34;gitlab-cli&#34;&gt;gitlab cli&lt;/h2&gt;&#xA;&lt;h3 id=&#34;installing-the-gitlab-cli&#34;&gt;Installing the gitlab CLI&lt;/h3&gt;&#xA;&lt;pre&gt;&lt;code&gt;# http://narkoz.github.io/gitlab/configuration&#xA;gem install gitlab&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h3 id=&#34;configuration&#34;&gt;Configuration&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export &lt;span style=&#34;color:#eedd82&#34;&gt;GITLAB_API_ENDPOINT&lt;/span&gt;=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;http://gitlab.com/api/v3&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export &lt;span style=&#34;color:#eedd82&#34;&gt;GITLAB_API_PRIVATE_TOKEN&lt;/span&gt;=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;YOUR_TOKEN_&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;available-commands&#34;&gt;Available commands&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ gitlab&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|   Help Topics   |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| Branches        |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| Commits         |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| Groups          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| Issues          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| Labels          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| MergeRequests   |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| Milestones      |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| Namespaces      |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| Notes           |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| Projects        |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| Repositories    |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| RepositoryFiles |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| Snippets        |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| SystemHooks     |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| Users           |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;sample-cli-commands&#34;&gt;Sample CLI commands&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# Check the list of Projects&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ gitlab projects&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# Based on the response, we know reconwisev2 is ID 487928&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# Let&amp;#39;s find out the list of labels in it&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ gitlab labels &lt;span style=&#34;color:#f60&#34;&gt;487928&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------+---------+--------------------+--------------+-------------------+---------------------------+------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|                                                      Gitlab.labels &lt;span style=&#34;color:#f60&#34;&gt;487928&lt;/span&gt;                                                      |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------+---------+--------------------+--------------+-------------------+---------------------------+------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| closed_issues_count | color   | description        | name         | open_issues_count | open_merge_requests_count | subscribed |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------+---------+--------------------+--------------+-------------------+---------------------------+------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| &lt;span style=&#34;color:#f60&#34;&gt;2&lt;/span&gt;                   | &lt;span style=&#34;color:#0f0&#34;&gt;#ff0000 | null               | !Blocker     | 0                 | 0                         | false      |&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------+---------+--------------------+--------------+-------------------+---------------------------+------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| &lt;span style=&#34;color:#f60&#34;&gt;2&lt;/span&gt;                   | &lt;span style=&#34;color:#0f0&#34;&gt;#0033cc | null               | #AWS         | 8                 | 0                         | false      |&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------+---------+--------------------+--------------+-------------------+---------------------------+------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| &lt;span style=&#34;color:#f60&#34;&gt;27&lt;/span&gt;                  | &lt;span style=&#34;color:#0f0&#34;&gt;#428bca | null               | #Bug         | 2                 | 0                         | false      |&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------+---------+--------------------+--------------+-------------------+---------------------------+------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| &lt;span style=&#34;color:#f60&#34;&gt;3&lt;/span&gt;                   | &lt;span style=&#34;color:#0f0&#34;&gt;#0033cc | null               | #Feature     | 29                | 0                         | false      |&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------+---------+--------------------+--------------+-------------------+---------------------------+------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| &lt;span style=&#34;color:#f60&#34;&gt;7&lt;/span&gt;                   | &lt;span style=&#34;color:#0f0&#34;&gt;#5843ad | null               | #Improvement | 22                | 0                         | false      |&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------+---------+--------------------+--------------+-------------------+---------------------------+------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| &lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt;                   | &lt;span style=&#34;color:#0f0&#34;&gt;#428bca |                    | #Support     | 1                 | 0                         | false      |&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------+---------+--------------------+--------------+-------------------+---------------------------+------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| &lt;span style=&#34;color:#f60&#34;&gt;28&lt;/span&gt;                  | &lt;span style=&#34;color:#0f0&#34;&gt;#f0ad4e | null               | $GH          | 12                | 0                         | false      |&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------+---------+--------------------+--------------+-------------------+---------------------------+------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt;                   | &lt;span style=&#34;color:#0f0&#34;&gt;#f0ad4e |                    | $IFAST       | 4                 | 0                         | false      |&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------+---------+--------------------+--------------+-------------------+---------------------------+------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| &lt;span style=&#34;color:#f60&#34;&gt;25&lt;/span&gt;                  | &lt;span style=&#34;color:#0f0&#34;&gt;#ff0000 | null               | 1-Critical   | 7                 | 0                         | false      |&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------+---------+--------------------+--------------+-------------------+---------------------------+------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| &lt;span style=&#34;color:#f60&#34;&gt;2&lt;/span&gt;                   | &lt;span style=&#34;color:#0f0&#34;&gt;#ad4363 | null               | 2-Important  | 20                | 0                         | false      |&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------+---------+--------------------+--------------+-------------------+---------------------------+------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| &lt;span style=&#34;color:#f60&#34;&gt;5&lt;/span&gt;                   | &lt;span style=&#34;color:#0f0&#34;&gt;#ad4363 | null               | 3-Normal     | 18                | 0                         | false      |&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------+---------+--------------------+--------------+-------------------+---------------------------+------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| &lt;span style=&#34;color:#f60&#34;&gt;2&lt;/span&gt;                   | &lt;span style=&#34;color:#0f0&#34;&gt;#d491a5 |                    | 4-Trivial    | 6                 | 0                         | false      |&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------+---------+--------------------+--------------+-------------------+---------------------------+------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt;                   | &lt;span style=&#34;color:#0f0&#34;&gt;#a8d695 | null               | ^In-Progress | 3                 | 1                         | false      |&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------+---------+--------------------+--------------+-------------------+---------------------------+------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt;                   | &lt;span style=&#34;color:#0f0&#34;&gt;#69d100 | Completed/Finished | ^Resolved    | 0                 | 1                         | false      |&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------+---------+--------------------+--------------+-------------------+---------------------------+------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;sample-curl-commands&#34;&gt;Sample CURL commands&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;Check the list of Projects&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Protobuf on Docker</title>
      <link>http://abhipandey.com/2016/06/protobuf-on-docker/</link>
      <pubDate>Tue, 28 Jun 2016 23:26:44 +0800</pubDate>
      <guid>http://abhipandey.com/2016/06/protobuf-on-docker/</guid>
      <description>&lt;p&gt;Found it really strange that nobody had mentioned on their blog how to&#xA;compile &lt;code&gt;Protobuf&lt;/code&gt; in python with &lt;strong&gt;C++&lt;/strong&gt; implementation.&lt;/p&gt;&#xA;&lt;p&gt;I had been having a lot of trouble with the compilation of python protobuf.&#xA;After struggling with it for a few months on and off I decided to give &lt;strong&gt;&lt;code&gt;Docker&lt;/code&gt;&lt;/strong&gt;&#xA;a try as I realized that my own Fedora OS may be the one having troubles.&#xA;Thought of starting with &lt;strong&gt;Ubuntu&lt;/strong&gt; Docker as I&amp;rsquo;ve had success with it earlier&#xA;with such compilation scripts. Luckily it all worked out successfully again&#xA;for protobuf.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using TODO in Fedora</title>
      <link>http://abhipandey.com/2016/06/using-todo-in-fedora/</link>
      <pubDate>Wed, 22 Jun 2016 21:17:56 +0800</pubDate>
      <guid>http://abhipandey.com/2016/06/using-todo-in-fedora/</guid>
      <description>&lt;p&gt;I recently started using Fedora for work and had to manage a lot of tasks on various projects.&#xA;The list was big enough and there&amp;rsquo;s no proper support for Evernote in linux, my trusty todo list manager&#xA;or ToDo list manager by AbstractSpoon. Decided to try post-it notes but my list was changing on an&#xA;ad-hoc basis. Finally came across an &lt;a href=&#34;https://extensions.gnome.org/extension/570/todotxt/&#34;&gt;extension Todo.txt&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Turned out this was just what I was looking for. I started putting all of my tasks in it, with proper categorization.&#xA;Behind the scenes it is an extremely simple app which has only two files, both saved in &lt;code&gt;~/.local/share/todo.txt/&lt;/code&gt; folder.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting list of Issues from JIRA under current sprint</title>
      <link>http://abhipandey.com/2016/05/getting-list-of-issues-from-jira-under-current-sprint/</link>
      <pubDate>Fri, 13 May 2016 21:17:56 +0800</pubDate>
      <guid>http://abhipandey.com/2016/05/getting-list-of-issues-from-jira-under-current-sprint/</guid>
      <description>&lt;p&gt;When you are working on &lt;em&gt;Agile Boards in JIRA&lt;/em&gt;, you may want to retrieve&#xA;all the issues related to a particular board or the sprint.&#xA;Usually you&amp;rsquo;d find issues in progress under the dashboard of the sprint itself.&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;Python JIRA&lt;/em&gt; allows you only a few options:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://jira.readthedocs.io/en/latest/api.html#jira.JIRA.incompleted_issues&#34;&gt;incompleted issues&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://jira.readthedocs.io/en/latest/api.html#jira.JIRA.completed_issues&#34;&gt;completed issues&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://jira.readthedocs.io/en/latest/api.html#jira.JIRA.removed_issues&#34;&gt;removed issues&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;As you will also notice from &lt;a href=&#34;https://jira.readthedocs.io/en/latest/api.html#jira.JIRA.sprints&#34;&gt;jira docs&lt;/a&gt;&#xA;the &lt;code&gt;sprints&lt;/code&gt; function in there only provides you sprints.&lt;/p&gt;&#xA;&lt;p&gt;What it fails to provide is the issues under the sprint&#xA;for which work through a different subquery under the hood.&lt;/p&gt;</description>
    </item>
    <item>
      <title>getopt vs getopts</title>
      <link>http://abhipandey.com/2016/03/getopt-vs-getopts/</link>
      <pubDate>Fri, 18 Mar 2016 20:20:21 +0800</pubDate>
      <guid>http://abhipandey.com/2016/03/getopt-vs-getopts/</guid>
      <description>&lt;p&gt;Should you use &lt;code&gt;getopt&lt;/code&gt; or &lt;code&gt;getopts&lt;/code&gt; in your bash scripts?&lt;/p&gt;&#xA;&lt;p&gt;The answer can be a bit tricky but mostly straight forward.&lt;/p&gt;&#xA;&lt;h2 id=&#34;getopt&#34;&gt;getopt&lt;/h2&gt;&#xA;&lt;p&gt;Generally, try to stay away from &lt;strong&gt;getopt&lt;/strong&gt; for the following reasons:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;External utility&lt;/li&gt;&#xA;&lt;li&gt;Traditional versions can&amp;rsquo;t handle empty argument strings, or arguments with embedded whitespace&lt;/li&gt;&#xA;&lt;li&gt;For the loops to work perfectly, you must provide the values in the same sequence as the for loop itself; which is&#xA;very hard to control&lt;/li&gt;&#xA;&lt;li&gt;Mostly a way to standardize the parameters&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The only time I could think of using &lt;em&gt;getopt&lt;/em&gt; is when I really want to use a long variable name and there&amp;rsquo;s just a single one.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Color your process listings</title>
      <link>http://abhipandey.com/2016/02/color-your-process-listings/</link>
      <pubDate>Tue, 09 Feb 2016 17:00:59 +0800</pubDate>
      <guid>http://abhipandey.com/2016/02/color-your-process-listings/</guid>
      <description>&lt;p&gt;Many a times I am grepping for a process that is running on a prod server with lots of different configuration&#xA;parameters. However, since there are so many of them, it is very difficult to view a particular parameter itself&#xA;and find out what value was assigned to it. I wanted to make it easier on the eyes and decided to color code the&#xA;parameters and separate them out from the values.&#xA;Here&amp;rsquo;s the bash function I pulled out.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to setup a local pypi mirror</title>
      <link>http://abhipandey.com/2016/02/how-to-setup-a-local-pypi-mirror/</link>
      <pubDate>Thu, 04 Feb 2016 15:02:07 +0000</pubDate>
      <guid>http://abhipandey.com/2016/02/how-to-setup-a-local-pypi-mirror/</guid>
      <description>&lt;p&gt;It is quite easy to set up a local pypi server.&lt;/p&gt;&#xA;&lt;p&gt;Some details can be found &lt;a href=&#34;https://pip.pypa.io/en/latest/user_guide/#installing-from-local-packages&#34;&gt;here&lt;/a&gt;.&#xA;You can also use &lt;a href=&#34;http://doc.devpi.net/latest/quickstart-pypimirror.html&#34;&gt;devpi&lt;/a&gt; if you prefer but it&#xA;seems overly complicated for a job that is easily achieved by pip.&lt;/p&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s look at how to use &lt;code&gt;pip&lt;/code&gt; for local installation.&#xA;Firstly, it is possible to install all requirements beforehand in a separate directory.&#xA;We can use the following commands:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip install --download DIR -r requirements.txt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you prefer wheel, then use the following:&lt;/p&gt;</description>
    </item>
    <item>
      <title>AngularJS 2.0 building blocks explained</title>
      <link>http://abhipandey.com/2016/01/angularjs-2.0-building-blocks-explained/</link>
      <pubDate>Sun, 03 Jan 2016 23:26:53 +0800</pubDate>
      <guid>http://abhipandey.com/2016/01/angularjs-2.0-building-blocks-explained/</guid>
      <description>&lt;p&gt;Let&amp;rsquo;s explain the eight building blocks of any Angular 2 app:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Module&lt;/li&gt;&#xA;&lt;li&gt;Component&lt;/li&gt;&#xA;&lt;li&gt;Template&lt;/li&gt;&#xA;&lt;li&gt;Metadata&lt;/li&gt;&#xA;&lt;li&gt;Data Binding&lt;/li&gt;&#xA;&lt;li&gt;Directive&lt;/li&gt;&#xA;&lt;li&gt;Service&lt;/li&gt;&#xA;&lt;li&gt;Dependency Injection&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h1 id=&#34;module&#34;&gt;Module&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Optional feature&lt;/li&gt;&#xA;&lt;li&gt;Useful if you are using TypeScript which allows you to use &lt;code&gt;interface&lt;/code&gt; or &lt;code&gt;classes&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;export class AppComponent&lt;/code&gt; is like saying that this class is going to be public&lt;/li&gt;&#xA;&lt;li&gt;Use relative file paths for importing modules&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Component class is something you&amp;rsquo;d export from a module.&lt;/p&gt;&#xA;&lt;h1 id=&#34;component&#34;&gt;Component&lt;/h1&gt;&#xA;&lt;p&gt;Components controls Views&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lambda Basics with Python using Github Webhooks or API Gateway</title>
      <link>http://abhipandey.com/2015/11/lambda-basics-with-python-using-github-webhooks-or-api-gateway/</link>
      <pubDate>Wed, 04 Nov 2015 07:49:00 +0000</pubDate>
      <guid>http://abhipandey.com/2015/11/lambda-basics-with-python-using-github-webhooks-or-api-gateway/</guid>
      <description>&lt;p&gt;I recently needed to call a command whenever there was a push on my Github repo.&#xA;Since this was related to AWS tasks, I figured &lt;code&gt;aws lambda&lt;/code&gt; is a good candidate.&#xA;Here I will talk about the steps I took to enable all of this using aws lambda, python.&#xA;As a side note, I will also elaborate on using API gateway to call upon the lambda itself.&lt;/p&gt;&#xA;&lt;p&gt;In a nutshell, what I will talk about:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Setting up custom domain with Github Pages</title>
      <link>http://abhipandey.com/2015/10/setting-up-custom-domain-with-github-pages/</link>
      <pubDate>Sat, 24 Oct 2015 14:59:18 -0400</pubDate>
      <guid>http://abhipandey.com/2015/10/setting-up-custom-domain-with-github-pages/</guid>
      <description>&lt;p&gt;Let&amp;rsquo;s take the example of my domain itself &lt;code&gt;abhipandey.com&lt;/code&gt; that I want to serve from &lt;code&gt;abhi1010.github.io&lt;/code&gt;.&#xA;We will need to do it in two steps:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Setup CNAME on github&#xA;&lt;ul&gt;&#xA;&lt;li&gt;So that github knows about your domain&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Setup &lt;strong&gt;A&lt;/strong&gt; record on AWS Route 53&#xA;&lt;ul&gt;&#xA;&lt;li&gt;So that domain can be registered&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;change-cname&#34;&gt;Change CNAME&lt;/h1&gt;&#xA;&lt;p&gt;If we want to tell github about the domain name, it is rather simple: &lt;em&gt;create a CNAME file with the content being&#xA;the name of the domain itself&lt;/em&gt;&#xA;Do &lt;em&gt;note&lt;/em&gt; here that the default redirect of your domain will be the value in your CNAME file.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Forceful Docker Container cleanup on Elastic Beanstalk</title>
      <link>http://abhipandey.com/2015/10/forceful-docker-container-cleanup-on-elastic-beanstalk/</link>
      <pubDate>Wed, 07 Oct 2015 14:59:18 -0400</pubDate>
      <guid>http://abhipandey.com/2015/10/forceful-docker-container-cleanup-on-elastic-beanstalk/</guid>
      <description>&lt;p&gt;&lt;em&gt;&lt;strong&gt;&lt;code&gt;Note&lt;/code&gt;&lt;/strong&gt;&lt;/em&gt;: &lt;em&gt;&lt;em&gt;If you are not sure of what you are doing here, don&amp;rsquo;t touch it.&#xA;This is all sensitive stuff and a minor mistake can bring down your production.&lt;/em&gt;&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Sometimes, because of so many deployments happening and sharing volumes between dockers instances, the space runs out on production server.&lt;/p&gt;&#xA;&lt;p&gt;I found some ways to fix this but the most brutal way to leave the orphaned directories behind forever is to remove them.&#xA;Such sadistic directories can be found at &lt;code&gt;/var/lib/docker/vfs/&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Powerline for zsh</title>
      <link>http://abhipandey.com/2015/09/powerline-for-zsh/</link>
      <pubDate>Mon, 28 Sep 2015 08:46:09 +0800</pubDate>
      <guid>http://abhipandey.com/2015/09/powerline-for-zsh/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;http://abhipandey.com/images/powerline-for-zsh.png&#34;&#xA;    alt=&#34;Powerline&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Powerline&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;I was having a lot of trouble getting &lt;a href=&#34;https://github.com/carlcarl/powerline-zsh&#34;&gt;&lt;em&gt;powerline&lt;/em&gt;&lt;/a&gt; to work on my mac machine.&#xA;No matter what I tried, I was getting errors like the following:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    .oh-my-zsh/themes/powerline.zsh-theme:100: character not in range&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;Finally got it to work after multiple attempts on &lt;code&gt;bash&lt;/code&gt; and &lt;code&gt;zsh&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;All I had to do was set &lt;code&gt;LC_ALL&lt;/code&gt; to &lt;strong&gt;en_US.UTF-8&lt;/strong&gt;. It would set all the locales to &lt;code&gt;en_US.UTF-8&lt;/code&gt; which&#xA;would allow &lt;code&gt;powerline&lt;/code&gt; fonts work properly.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Automated Git Mirror With GitHub or Gitlab or Bitbucket</title>
      <link>http://abhipandey.com/2015/09/automated-git-mirror-with-github-or-gitlab-or-bitbucket/</link>
      <pubDate>Sun, 27 Sep 2015 13:30:10 +0800</pubDate>
      <guid>http://abhipandey.com/2015/09/automated-git-mirror-with-github-or-gitlab-or-bitbucket/</guid>
      <description>&lt;h1 id=&#34;experience-with-gitlab-ci&#34;&gt;Experience with Gitlab CI&lt;/h1&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;http://abhipandey.com/images/git_mirror_with_gitlab__ci.png&#34;&#xA;    alt=&#34;Git Mirror from Gitlab to Bitbucket using Gitlab CI&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Git Mirror from Gitlab to Bitbucket using Gitlab CI&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;Had to move from &lt;code&gt;BitBucket&lt;/code&gt; to &lt;code&gt;Gitlab&lt;/code&gt;; which is really great, btw. However, there was one tiny issue here - &lt;code&gt;Gitlab&lt;/code&gt; was not supported by &lt;code&gt;Shippable&lt;/code&gt;.&#xA;As you may know already &lt;code&gt;Shippable&lt;/code&gt; is a hosted cloud platform that provides hosted continuous integration.&#xA;We use it in our current setup to do a full testing and deployment onto &lt;code&gt;AWS Elastic Beanstalk&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Git LOC Stats by Time Range</title>
      <link>http://abhipandey.com/2015/09/git-loc-stats-by-time-range/</link>
      <pubDate>Thu, 17 Sep 2015 11:06:06 +0800</pubDate>
      <guid>http://abhipandey.com/2015/09/git-loc-stats-by-time-range/</guid>
      <description>&lt;p&gt;Recently had an interest in seeing how many LOC were committed to the code base over a particular period of&#xA;time. After some tinkering around, mainly to find out the correct format for time ranges, decided to use the following bash script for finding coding stats.&#xA;Following sample is to find out lines added or removed during the year 2014.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git log --after=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;2014-1-1&amp;#34;&lt;/span&gt; --before=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#34;2014-12-31&amp;#34;&lt;/span&gt; --pretty=tformat: --numstat &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    | awk &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;{ if ( $2 != 0 &amp;amp;&amp;amp; $1 != 0 ) print $0 }&amp;#39;&lt;/span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    | gawk &lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;{ add += $1; subs += $2; loc += $1 - $2 } END { printf &amp;#34;Added lines: %s Removed lines: %s Total # of lines: %s\n&amp;#34;, add, subs, loc }&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;The result will be as follows:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Moving To Hugo</title>
      <link>http://abhipandey.com/2015/09/moving-to-hugo/</link>
      <pubDate>Tue, 15 Sep 2015 11:14:38 +0800</pubDate>
      <guid>http://abhipandey.com/2015/09/moving-to-hugo/</guid>
      <description>&lt;figure&gt;&lt;img src=&#34;http://abhipandey.com/images/moving_to_hugo__demo.png&#34;&#xA;    alt=&#34;Create your own blog&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;Create your own blog&lt;/p&gt;&#xA;    &lt;/figcaption&gt;&#xA;&lt;/figure&gt;&#xA;&#xA;&lt;p&gt;My blogging experience started with &lt;code&gt;blogspot&lt;/code&gt;. It was great until I realized that I needed something that was responsive.&#xA;The layout looked nice on 1024x768 but with the new generation of screens it started to look narrow.&#xA;I hated the look of the website when it seemed that I was wasting a lot of white space on the web pages.&#xA;I moved to &lt;code&gt;wordpress.com&lt;/code&gt; to give that a try when they started their responsive themes.&#xA;The website looked great after a lot of customization but after writing some posts there,&#xA;I realized that I had to &lt;strong&gt;micro-manage&lt;/strong&gt; a lot of styling every time I was writing some new section, like special blocks or tables.&#xA;The post writing was fun only for a short while. The enthusiasm died down pretty soon.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using External Tools with Git Diff</title>
      <link>http://abhipandey.com/2015/09/using-external-tools-with-git-diff/</link>
      <pubDate>Thu, 10 Sep 2015 00:18:24 +0800</pubDate>
      <guid>http://abhipandey.com/2015/09/using-external-tools-with-git-diff/</guid>
      <description>&lt;p&gt;If you want to view what has changed since one commit to another, it is quite easy to view the diff.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git diff 5fad06c..0a504fa&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;You will get something like this:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-diff&#34; data-lang=&#34;diff&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;diff --git a/modules/file_1.erb b/modules/file_1.erb&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;index 0538da0..6621d93 100644&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--- a/modules/file_1.erb&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+++ b/modules/file_1.erb&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@@ -5,8 +5,8 @@&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   // Algo settings&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &amp;#34;Carbo&amp;#34;: {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-    &amp;#34;active-instrument&amp;#34;: &amp;#34;SGX/NK15&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-    &amp;#34;hedge-instrument&amp;#34;: &amp;#34;SGX/NK16&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+    &amp;#34;active-instrument&amp;#34;: &amp;#34;SGX/NK17&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+    &amp;#34;hedge-instrument&amp;#34;: &amp;#34;SGX/NK18&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &amp;#34;owner-app-id&amp;#34;: &amp;#34;abhi1010&amp;#34;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;What if you wanted a use an external tool like &lt;code&gt;meld&lt;/code&gt; to view the diff, in a nice beautiful side by side view? You&amp;rsquo;d have to modify your settings to tell that to &lt;code&gt;git&lt;/code&gt;.&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git config --global diff.tool meld&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Elastic Beanstalk Deployment Automation</title>
      <link>http://abhipandey.com/2015/09/elastic-beanstalk-deployment-automation/</link>
      <pubDate>Fri, 04 Sep 2015 00:17:10 +0800</pubDate>
      <guid>http://abhipandey.com/2015/09/elastic-beanstalk-deployment-automation/</guid>
      <description>&lt;p&gt;We are going to talk about a setup where &lt;strong&gt;all you need to do it &lt;em&gt;commit&lt;/em&gt; your code and all the rest of the steps from unit tests to deployment can be taken care of by some externally hosted cloud platform that provides continuous integration.&lt;/strong&gt;&#xA;In my case, it is going to be &lt;code&gt;Shippable&lt;/code&gt; that I am using as a sample but you can use almost anything like &lt;code&gt;TravisCI&lt;/code&gt; or &lt;code&gt;codeship&lt;/code&gt;, for example.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Nginx Upload limits on Beanstalk Docker</title>
      <link>http://abhipandey.com/2015/09/nginx-upload-limits-on-beanstalk-docker/</link>
      <pubDate>Fri, 04 Sep 2015 00:14:35 +0800</pubDate>
      <guid>http://abhipandey.com/2015/09/nginx-upload-limits-on-beanstalk-docker/</guid>
      <description>&lt;p&gt;If I am not wrong, &lt;code&gt;nginx&lt;/code&gt; only allows you to upload up till max 2Mb of data by default. If you are doing a &lt;code&gt;docker&lt;/code&gt; deployment on &lt;code&gt;beanstalk&lt;/code&gt; you may to remember to change that not once but twice!&lt;/p&gt;&#xA;&lt;p&gt;As you may know already, &lt;code&gt;beanstalk&lt;/code&gt; creates an &lt;code&gt;EC2&lt;/code&gt; instance to manage the &lt;code&gt;docker&lt;/code&gt; environment.&lt;br&gt;&#xA;Since &lt;code&gt;EC2&lt;/code&gt; needs to manage the &lt;code&gt;docker&lt;/code&gt; environment and serve the web interface as well, it does so by having another &lt;code&gt;nginx&lt;/code&gt; instance to serve the &lt;code&gt;nginx&lt;/code&gt; within &lt;code&gt;docker&lt;/code&gt;.&#xA;Hence, if you had to modify the &lt;code&gt;nginx&lt;/code&gt; settings to allow bigger uploads, &lt;strong&gt;you&amp;rsquo;d have to modify the settings for &lt;code&gt;nginx&lt;/code&gt; on both - &lt;code&gt;docker&lt;/code&gt; as well as &lt;code&gt;EC2&lt;/code&gt;&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Updating Django Source with Docker Deployments</title>
      <link>http://abhipandey.com/2015/09/updating-django-source-with-docker-deployments/</link>
      <pubDate>Fri, 04 Sep 2015 00:11:51 +0800</pubDate>
      <guid>http://abhipandey.com/2015/09/updating-django-source-with-docker-deployments/</guid>
      <description>&lt;p&gt;While deploying docker multiple times, you may not want to copy over your &lt;code&gt;Django&lt;/code&gt; source code every time you do a deployment.&lt;/p&gt;&#xA;&lt;h1 id=&#34;setting-up-supervisord&#34;&gt;Setting up &lt;code&gt;supervisord&lt;/code&gt;&lt;/h1&gt;&#xA;&lt;p&gt;Luckily there is an easy way to manage this. Since you are working with &lt;code&gt;Django&lt;/code&gt;, there is a good chance that you are also managing the processes (like &lt;code&gt;uwsgi&lt;/code&gt;) with &lt;code&gt;supervisord&lt;/code&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Here are some of the steps that you can take with &lt;code&gt;supervisord&lt;/code&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Set up a new process in &lt;code&gt;supervisord&lt;/code&gt;&lt;/li&gt;&#xA;&lt;li&gt;Do not allow it to &lt;em&gt;&lt;code&gt;autorestart&lt;/code&gt;&lt;/em&gt; since it will be a one-shot process&lt;/li&gt;&#xA;&lt;li&gt;Call another script in any format to update the source code&#xA;&lt;ul&gt;&#xA;&lt;li&gt;As an example, I use &lt;code&gt;bash&lt;/code&gt; to update my source code through &lt;code&gt;git&lt;/code&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Here&amp;rsquo;s a sample code:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Sharing folders on Beanstalk Docker</title>
      <link>http://abhipandey.com/2015/08/sharing-folders-on-beanstalk-docker/</link>
      <pubDate>Fri, 14 Aug 2015 00:19:51 +0800</pubDate>
      <guid>http://abhipandey.com/2015/08/sharing-folders-on-beanstalk-docker/</guid>
      <description>&lt;p&gt;It is very easy to setup volume sharing in &lt;code&gt;docker&lt;/code&gt;. You ideally want the following folders to be shared when a new &lt;code&gt;docker&lt;/code&gt; is initialized for you:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;/var/log&lt;/code&gt; so that you can keep track of logs&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;nginx&lt;/code&gt; specific folders because you will have two instances of &lt;code&gt;nginx&lt;/code&gt; running - one on &lt;code&gt;docker&lt;/code&gt; and another on &lt;code&gt;EC2&lt;/code&gt;. This allows you to share logs&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Also read &lt;a href=&#34;http://abhipandey.com/2015/09/nginx-upload-limits-on-beanstalk-docker/&#34;&gt;this post&lt;/a&gt; for related info&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;your personal workspace or anything that you&amp;rsquo;d like to share&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Here&amp;rsquo;s how you&amp;rsquo;d do it. The keyword is &lt;code&gt;VOLUME&lt;/code&gt;&amp;hellip; in your &lt;code&gt;Dockerfile&lt;/code&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Convert GitHub Wiki to Static Site with themes</title>
      <link>http://abhipandey.com/2015/08/convert-github-wiki-to-static-site-with-themes/</link>
      <pubDate>Fri, 07 Aug 2015 14:59:18 -0400</pubDate>
      <guid>http://abhipandey.com/2015/08/convert-github-wiki-to-static-site-with-themes/</guid>
      <description>&lt;p&gt;I recently wanted to setup a wiki so that I could convert it into a static html site with a proper themes.&#xA;What could be a possible use case for such a requirement:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Manage the documentation of a product internally through &lt;code&gt;git&lt;/code&gt; but publish it for clients/world through static site&lt;/li&gt;&#xA;&lt;li&gt;Convert the uncolored wiki to a themed version&lt;/li&gt;&#xA;&lt;li&gt;Allow serving of the wiki through web application frameworks like &lt;code&gt;Django&lt;/code&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;It may allow you to have authentication system as a first step hurdle to stop everybody from giving access&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Anyways, I went about the whole process and decided to jot down everything. Here I am taking &lt;a href=&#34;https://github.com/mbostock/d3/wiki&#34;&gt;D3 Wiki&lt;/a&gt; as an example&#xA;which I will be converting into a static site. Let&amp;rsquo;s begin.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Docker Container cleanup on Elastic Beanstalk</title>
      <link>http://abhipandey.com/2015/08/docker-container-cleanup-on-elastic-beanstalk/</link>
      <pubDate>Fri, 07 Aug 2015 14:59:18 -0400</pubDate>
      <guid>http://abhipandey.com/2015/08/docker-container-cleanup-on-elastic-beanstalk/</guid>
      <description>&lt;p&gt;Sometimes you may notice that old containers are not cleaned up from Beanstalk environment. This may be due to your container still running as a ghost on the background. One way to find out about this is to quickly look into your&#xA;&lt;code&gt;/var/lib/docker/vfs/dir&lt;/code&gt; directory whether it has too many folders.&lt;/p&gt;&#xA;&lt;p&gt;Next, find out what container processes you have going on.&#xA;&lt;code&gt;[root@ip dir]# docker ps -a&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;You might see something like this:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Partition Linked List around a Value X</title>
      <link>http://abhipandey.com/2014/06/partition-linked-list-around-a-value-x/</link>
      <pubDate>Mon, 09 Jun 2014 15:02:07 +0000</pubDate>
      <guid>http://abhipandey.com/2014/06/partition-linked-list-around-a-value-x/</guid>
      <description>&lt;p&gt;How do you partition a list around a value x, such that all nodes less than x come before all nodes greater than or equal to x?&lt;/p&gt;&#xA;&lt;p&gt;Well, there are some solutions possible. The solution, I came up with, is a bit convoluted but let me tell the idea behind it. You want to track the following:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Two pointers to remember the beginning of the &lt;em&gt;lower&lt;/em&gt; and &lt;em&gt;higher&lt;/em&gt; series each&lt;/p&gt;</description>
    </item>
    <item>
      <title>Find the Kth to Last Element of a Singly Linked List</title>
      <link>http://abhipandey.com/2014/06/find-the-kth-to-last-element-of-a-singly-linked-list/</link>
      <pubDate>Sun, 08 Jun 2014 07:49:47 +0000</pubDate>
      <guid>http://abhipandey.com/2014/06/find-the-kth-to-last-element-of-a-singly-linked-list/</guid>
      <description>&lt;p&gt;It is possible to a recursive solutions but I will use a simple runner logic. Recursive solutions are usually less optimal.&lt;/p&gt;&#xA;&lt;p&gt;Note here that, in our logic K=1 would return the last element in the linked list. Similarly, K=2 would return the second last element.&lt;/p&gt;&#xA;&lt;p&gt;The suggested solution here is to use two pointers:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;One pointer will first travel K items into the list&lt;/li&gt;&#xA;&lt;li&gt;Once that is done, both the pointers start travelling together, one item at a time&lt;/li&gt;&#xA;&lt;li&gt;They keep travelling until the end of linked list is found&lt;/li&gt;&#xA;&lt;li&gt;In that situation, the first pointer is at the end of the list, but the second pointer would have only reached till Kth element - this is what you want&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s have a look at the code:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Removing Duplicates from Linked List</title>
      <link>http://abhipandey.com/2014/06/removing-duplicates-from-linked-list/</link>
      <pubDate>Sat, 07 Jun 2014 16:50:12 +0000</pubDate>
      <guid>http://abhipandey.com/2014/06/removing-duplicates-from-linked-list/</guid>
      <description>&lt;p&gt;Duplicates can be removed in many ways:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Create a new Linked List containing only unique items&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Iterate through the Linked List and keep removing items that are being repeated&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The internal structure itself for the algo can either be map or set based. When using map the Node itself can be saved thereby making your life easier if you are creating a new Linked List. However sets can be very useful if we are just iterating through the Linked List and simply deleting items that are being repetetive. This is also a great spacesaver. Hence we decided to go down this path.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Deleting a Node from Singly Linked List</title>
      <link>http://abhipandey.com/2014/06/deleting-a-node-from-singly-linked-list/</link>
      <pubDate>Sat, 07 Jun 2014 10:49:17 +0000</pubDate>
      <guid>http://abhipandey.com/2014/06/deleting-a-node-from-singly-linked-list/</guid>
      <description>&lt;p&gt;Deleting a Node from Singly Linked List is rather straight forward.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;You have to know the head first of all&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Start by checking the head if that&amp;rsquo;s the one you are looking for&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Keep moving forward and checking - always check for null pointers everywhere&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Before we talk about the code, let&amp;rsquo;s see how Linked List is setup.&lt;/p&gt;&#xA;&lt;script dark-style=&#34;true&#34;&#xA;  src=&#34;https://gist.github.com/abhi1010/33be440bf1012773b7e1.js&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;Now, below is the code for it&amp;hellip;.&lt;/p&gt;&#xA;&lt;script dark-style=&#34;true&#34;&#xA;  src=&#34;https://gist.github.com/abhi1010/bf9dbb193b4ff84ba3af.js&#34;&gt;&lt;/script&gt;&#xA;&lt;h3 id=&#34;code&#34;&gt;Code&lt;/h3&gt;&#xA;&lt;p&gt;As usual the code is available &lt;a href=&#34;https://github.com/abhi1010/Algorithms/blob/master/Algo_codes/Node.cpp&#34;&gt;here&lt;/a&gt;:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Usage of typename</title>
      <link>http://abhipandey.com/2014/05/usage-of-typename/</link>
      <pubDate>Mon, 26 May 2014 14:19:15 +0000</pubDate>
      <guid>http://abhipandey.com/2014/05/usage-of-typename/</guid>
      <description>&lt;p&gt;What is wrong with the following code?&lt;/p&gt;&#xA;&lt;script dark-style=&#34;true&#34;&#xA;  src=&#34;https://gist.github.com/abhi1010/0bd5e4d910e4d8a7672e.js&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;The issue is very simple but hard to notice. If you try to compile this, you will get the following errors:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-console&#34; data-lang=&#34;console&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    main.cpp:24:5: error: need &amp;#39;typename&amp;#39; before &amp;#39;OuterStruct&amp;lt;T2&amp;gt;::InnerStruct&amp;#39; because &amp;#39;OuterStruct&amp;lt;T2&amp;gt;&amp;#39; is a dependent scope&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    OuterStruct&amp;lt;T2&amp;gt;::InnerStruct mUsingInner;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ^&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    main.cpp: In function &amp;#39;int main(int, char**)&amp;#39;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    main.cpp:34:13: error: &amp;#39;struct InnerStruct_Wrapper&amp;lt;int&amp;gt;&amp;#39; has no member named &amp;#39;mUsingInner&amp;#39;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    wrapper.mUsingInner = innerStrct;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;&lt;strong&gt;The Issue&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Setting up your VIM... Your style</title>
      <link>http://abhipandey.com/2014/05/setting-up-your-vim...-your-style/</link>
      <pubDate>Mon, 19 May 2014 15:51:51 +0000</pubDate>
      <guid>http://abhipandey.com/2014/05/setting-up-your-vim...-your-style/</guid>
      <description>&lt;p&gt;Writing code using VIM can be a bit overwhelming but it helps creating a few shortcuts there to make your life easier. Here I will discuss a few.&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;First of all, it is always a good idea to set up your tabs and spaces&lt;/li&gt;&#xA;&lt;li&gt;Set up shortcuts for:&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Toggling of Auto-Indent&lt;/code&gt; while pasting source text; very useful in code (&lt;em&gt;F2&lt;/em&gt; in my provided script)&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Toggling of Auto-Scroll&lt;/code&gt; of Split windows (&lt;em&gt;F3&lt;/em&gt; in my provided script)&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Macro for Folding functions&lt;/code&gt; within the source code (&lt;em&gt;&lt;em&gt;@q&lt;/em&gt;&lt;/em&gt; in my provided script)&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Smart case search&lt;/code&gt; - based on whether the input is in caps or not&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;Toggling of Mouse Usage&lt;/code&gt; in VIM window - to allow quick selection of text (&lt;em&gt;F12&lt;/em&gt; in my provided script)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Please see the provided script below to have a look.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting a group of lines from a file</title>
      <link>http://abhipandey.com/2014/05/getting-a-group-of-lines-from-a-file/</link>
      <pubDate>Mon, 19 May 2014 09:45:57 +0000</pubDate>
      <guid>http://abhipandey.com/2014/05/getting-a-group-of-lines-from-a-file/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve had this need quite a few times to pull out a section of logs that would begin with a particular line and end with another. grep is not exactly useful there because it only prints out sections based on line counters (using -A/B/C) lines based on a single search pattern.&lt;/p&gt;&#xA;&lt;p&gt;I came up with a script that can run at almost same speeds using &lt;code&gt;grep/cat/awk&lt;/code&gt;. &lt;code&gt;awk&lt;/code&gt; is used to decide whether the end of the section has been reached or not. Some features of the script are:&lt;/p&gt;</description>
    </item>
    <item>
      <title>32 bit vs 64 bit</title>
      <link>http://abhipandey.com/2014/04/32-bit-vs-64-bit/</link>
      <pubDate>Tue, 15 Apr 2014 02:40:00 +0000</pubDate>
      <guid>http://abhipandey.com/2014/04/32-bit-vs-64-bit/</guid>
      <description>&lt;h3 id=&#34;when-to-use-64-bit&#34;&gt;When to use 64-bit?&lt;/h3&gt;&#xA;&lt;p&gt;If your application needs more than 2-4gb of data&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;If your application intensively uses 64-bit arithmetic&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;pre&gt;&lt;code&gt;* 32-bit x86 compiled applications are restricted to x86 instruction set, even when run on on a 64-bit machine&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;x64 supports 16 registers compared to just 8 in x86. If your code is computation intensive this may help a great deal&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;when-to-use-32-bit&#34;&gt;When to use 32-bit?&lt;/h3&gt;&#xA;&lt;p&gt;After reading so many great things about 32 bit, why would anybody still want to code against 32-bit? Simple reason - code compiled in 32-bit takes lesser memory. For example, a pointer in 64-bit machine is 8 bytes compared to 4 bytes with 32-bit. Now imagine how many pointers do you have going around in your code?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tokenize a String using C&#43;&#43;</title>
      <link>http://abhipandey.com/2014/04/tokenize-a-string-using-c-/</link>
      <pubDate>Tue, 08 Apr 2014 07:00:00 +0000</pubDate>
      <guid>http://abhipandey.com/2014/04/tokenize-a-string-using-c-/</guid>
      <description>&lt;p&gt;Here&amp;rsquo;s a short snippet to split a string into multiple tokens; into a vector. As you will see that, if you run the code, boost version performs better because you can choose a number of delimiters to split your string instead of the vanilla version using the normal C++ code. Of course, you may also write your own code to do something like this but I was looking to do some short snippets.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Heap Sort vs Merge Sort vs Insertion Sort vs Radix Sort vs Counting Sort vs Quick Sort</title>
      <link>http://abhipandey.com/2014/03/heap-sort-vs-merge-sort-vs-insertion-sort-vs-radix-sort-vs-counting-sort-vs-quick-sort/</link>
      <pubDate>Wed, 19 Mar 2014 05:42:00 +0000</pubDate>
      <guid>http://abhipandey.com/2014/03/heap-sort-vs-merge-sort-vs-insertion-sort-vs-radix-sort-vs-counting-sort-vs-quick-sort/</guid>
      <description>&lt;p&gt;I had written about sorting algorithms (Tag: &lt;a href=&#34;http://codersdigest.wordpress.com/tag/sorting/&#34;&gt;Sorting&lt;/a&gt;) with details about what to look out for along with their code snippets but I wanted a do a quick comparison of all the algos together to see how do they perform when the same set of input is provided to them. Hence I started working on a simple implementation for each one of them. I have now put together all of them in a single project on GitHub. I ensured that they all have the same set of procedures during their run. Some of the items I wanted to ensure was:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Global Search in VIM</title>
      <link>http://abhipandey.com/2014/02/global-search-in-vim/</link>
      <pubDate>Tue, 11 Feb 2014 14:56:00 +0000</pubDate>
      <guid>http://abhipandey.com/2014/02/global-search-in-vim/</guid>
      <description>&lt;p&gt;You must be knowing about regular VIM search&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;%s/SEARCH/REPLACE/CMD&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;However, sometimes you do not want to replace something but just see all instances of the a word or phrase. In such cases, global search is really useful when on vim. The syntax is simpler than normal search-replace:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;:[range]g[lobal]/{pattern}/[cmd]&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;This will show all instances of the &amp;ldquo;SEARCH&amp;rdquo; term within the VIM window. There&amp;rsquo;s another version of the same command which is as follows:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Reading Excel in C#</title>
      <link>http://abhipandey.com/2013/11/reading-excel-in-c/</link>
      <pubDate>Sat, 09 Nov 2013 23:51:00 +0000</pubDate>
      <guid>http://abhipandey.com/2013/11/reading-excel-in-c/</guid>
      <description>&lt;p&gt;Recently had to work on an Excel and update its content when some events were triggered on a Bloomberg terminal. I couldn&amp;rsquo;t find any code for reading the excel file using C# so thought of putting that up.&lt;/p&gt;&#xA;&lt;p&gt;There were a few things to learn:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Excel support is not available by default so make sure to add Microsoft.Office.Interop.Excel as a reference&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Sometime indexing to reference the Workbooks or Worksheets may not work so try out other values&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ideas for Shared Memory in Linux</title>
      <link>http://abhipandey.com/2013/10/ideas-for-shared-memory-in-linux/</link>
      <pubDate>Sun, 13 Oct 2013 05:59:22 +0000</pubDate>
      <guid>http://abhipandey.com/2013/10/ideas-for-shared-memory-in-linux/</guid>
      <description>&lt;p&gt;I have been doing extensive research today regarding shared memory in linux before I embark on a new project in which shaving time off process communication latency is extremely important. I found some very interesting links as well. Let’s break them down:&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Topic&lt;/th&gt;&#xA;          &lt;th&gt;Description&lt;/th&gt;&#xA;          &lt;th&gt;Link&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Theory/Explanation&lt;/td&gt;&#xA;          &lt;td&gt;Some articles that explain how to get started&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2006/n2044.html&#34;&gt;open-std&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Content in the first column&lt;/td&gt;&#xA;          &lt;td&gt;Content in the second column&lt;/td&gt;&#xA;          &lt;td&gt;lkd&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;IPC Mechanisms – some recommendations. Mainly talks about softwares like Boost, dBus dBus used to work using kernel levels but lately have come up with a patch that bypasses kernels&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;http://stackoverflow.com/questions/1906166/inter-process-communication-recommendation&#34;&gt;Stackoverflow&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;What every programmer should know about memory&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;http://lwn.net/Articles/255364/&#34;&gt;LWN&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Linux IPC&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;http://www.tldp.org/LDP/tlk/ipc/ipc.html&#34;&gt;TLDP&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Cache Friendly Code&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;http://stackoverflow.com/questions/16699247/what-is-cache-friendly-code/16699282#16699282&#34;&gt;Stackoverflow&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Helpful Articles &#x9;Which linux IPC technique to use?&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;http://stackoverflow.com/questions/2281204/which-linux-ipc-technique-to-use&#34;&gt;Stackoverflow&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Inter process communication – talks about shared memory&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;http://www.advancedlinuxprogramming.com/alp-folder/alp-ch05-ipc.pdf&#34;&gt;ALP&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Linux Poll Events on Shared Memory&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;http://stackoverflow.com/questions/11470322/cause-a-linux-poll-event-on-a-shared-memory-file&#34;&gt;Stackoverflow&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Using semaphores in Shared Memory&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;http://stackoverflow.com/questions/10772860/semaphores-and-shared-memory-in-linux&#34;&gt;Stackoverflow&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Sharing semaphores between Shared Memory&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;http://stackoverflow.com/questions/8359322/how-to-share-semaphores-between-processes-using-shared-memory?rq=1&#34;&gt;Stackoverflow&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Sharing memory between processes&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;http://stackoverflow.com/questions/11583281/sharing-memory-between-two-processes&#34;&gt;Stackoverflow&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Reserving memory at kernel boot up (DMA)&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;http://stackoverflow.com/questions/647783/direct-memory-access-in-linux?rq=1&#34;&gt;Stackoverflow&lt;/a&gt;&lt;/td&gt;&#xA;          &lt;td&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Extra&lt;/td&gt;&#xA;          &lt;td&gt;IPC Shared memory samples&lt;/td&gt;&#xA;          &lt;td&gt;&lt;a href=&#34;http://linuxgazette.net/104/ramankutty.html&#34;&gt;linuxgazette&lt;/a&gt;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>Oracle SQL Queries</title>
      <link>http://abhipandey.com/2013/09/oracle-sql-queries/</link>
      <pubDate>Sun, 22 Sep 2013 08:48:00 +0000</pubDate>
      <guid>http://abhipandey.com/2013/09/oracle-sql-queries/</guid>
      <description>&lt;p&gt;Recently I found myself in a situation where I had to view all the tables in the Oracle Server.&lt;/p&gt;&#xA;&lt;p&gt;I did some digging and came up with these helpful queries.&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th&gt;Query&lt;/th&gt;&#xA;          &lt;th&gt;Remarks&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Select * from All_Tables&lt;/td&gt;&#xA;          &lt;td&gt;View all the tables in the Oracle Server&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;Select * from all_Views&lt;/td&gt;&#xA;          &lt;td&gt;View all the views in the Oracle Server&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td&gt;DESC table&lt;/td&gt;&#xA;          &lt;td&gt;View all the columns of a given table. This function is used instead of the previous one mostly, but when this one doesn&amp;rsquo;t work make sure you try the other one - I bet it will work.&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;Here&amp;rsquo;s a short code for viewing all the columns of a given table.&lt;/p&gt;</description>
    </item>
    <item>
      <title>CVS Cheat Sheet</title>
      <link>http://abhipandey.com/2013/07/cvs-cheat-sheet/</link>
      <pubDate>Wed, 03 Jul 2013 07:28:00 +0000</pubDate>
      <guid>http://abhipandey.com/2013/07/cvs-cheat-sheet/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve worked on CVS for a long time now and figured out that I&amp;rsquo;d save a lot of time if I started writing alias or functions for the numerous tasks that I did on them. I will put down some of them here so you may benefit from them.&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;Silently update and inform about the status of the files (recursive)&lt;/em&gt;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;cvs -q -n update&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&lt;em&gt;Same as earlier but will only do so for the current folder&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Cursor Control in VIM Search</title>
      <link>http://abhipandey.com/2013/06/cursor-control-in-vim-search/</link>
      <pubDate>Tue, 11 Jun 2013 07:05:00 +0000</pubDate>
      <guid>http://abhipandey.com/2013/06/cursor-control-in-vim-search/</guid>
      <description>&lt;p&gt;Found a great way to search for keywords &amp;amp;&amp;amp; control the location of cursor in vim. It is excellent if you want to do a particular task multiple times. Usually if you search the cursor will straight away take you to the start of search. What if you want to go to the end of the word you are searching for?&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;/pattern/e&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;This takes you to the END of the keyword you are looking for.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Change Putty Window Title</title>
      <link>http://abhipandey.com/2013/04/change-putty-window-title/</link>
      <pubDate>Thu, 25 Apr 2013 07:02:00 +0000</pubDate>
      <guid>http://abhipandey.com/2013/04/change-putty-window-title/</guid>
      <description>&lt;p&gt;How to modify the Putty window title to a specific string?&lt;/p&gt;&#xA;&lt;p&gt;By default, you&amp;rsquo;d like to have the window title to give you the full path to the folder you are working from (working directory). &lt;code&gt;PROMPT_COMMAND&lt;/code&gt;will help you with that.&lt;/p&gt;&#xA;&lt;p&gt;However, if you have too many windows where you are on the same folder then it may become confusing. To set your own title you&amp;rsquo;d like to use the &lt;code&gt;title()&lt;/code&gt; function provided here. It sets the name to whatever you say.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Multiple Inheritance</title>
      <link>http://abhipandey.com/2012/10/multiple-inheritance/</link>
      <pubDate>Tue, 23 Oct 2012 14:21:00 +0000</pubDate>
      <guid>http://abhipandey.com/2012/10/multiple-inheritance/</guid>
      <description>&lt;p&gt;What is the output to the following code?&lt;/p&gt;&#xA;&lt;script dark-style=&#34;true&#34;&#xA;  src=&#34;https://gist.github.com/abhi1010/8fac0155f30551df8bca.js&#34;&gt;&lt;/script&gt;&#xA;&lt;p&gt;&lt;em&gt;Output&lt;/em&gt;&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;Foo FooToo Bar FootTooBar&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&lt;em&gt;Why?&lt;/em&gt;&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;An instance of FooTooBar needs to be created according to main()&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;To create that instance, we first need the base classes too, hence FooToo and Bar classes&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Now notice the keyword virtual everytime inheritance is defined&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;pre&gt;&lt;code&gt;* This does half the magic by ensuring that the member data instances are shared with any other inclusions of that same base in further derived classes&#xA;&#xA;&#xA;&#xA;* This is very handy for multiple inheritance&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;As an exercise you may try to remove virtual from some derived class and see what results you get.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Heap Sort</title>
      <link>http://abhipandey.com/2012/10/heap-sort/</link>
      <pubDate>Wed, 17 Oct 2012 14:15:00 +0000</pubDate>
      <guid>http://abhipandey.com/2012/10/heap-sort/</guid>
      <description>&lt;p&gt;Heap Sort algo has the following properties:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;The top element (root) is always the next in order&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;This allows you to remove one element at a time (the root) and ensure that you are pulling out items in a sorted order&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Always takes O(n*log(n)) time - worst case or best case&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre&gt;&lt;code&gt;* Pros and cons to both&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Simple implementations require additional space to hold heap of size n&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;pre&gt;&lt;code&gt;* Hence space requirement is double of array size n&#xA;&#xA;&#xA;* Not included in big-O notation so something to keep in mind&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Not a stable sort&lt;/p&gt;</description>
    </item>
    <item>
      <title>Merge Sort</title>
      <link>http://abhipandey.com/2012/10/merge-sort/</link>
      <pubDate>Sat, 06 Oct 2012 14:26:00 +0000</pubDate>
      <guid>http://abhipandey.com/2012/10/merge-sort/</guid>
      <description>&lt;p&gt;Merge Sort&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Complexity is O(n log n)&lt;/li&gt;&#xA;&lt;li&gt;Needs more space to merge - proportional to the size of the array&lt;/li&gt;&#xA;&lt;li&gt;Stable Sort&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;pre&gt;&lt;code&gt;* Preserves the order of equal elements&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Merge Sort does about 39% lower comparisons, in worst case, compared to Quicksort&amp;rsquo;s average case&lt;/li&gt;&#xA;&lt;li&gt;The algo almost always behaves in the same way; taking relatively the same amount of time, whether sorted or unsorted arrays&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;testing-notes&#34;&gt;Testing Notes&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Started testing the algo with two versions.&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;pre&gt;&lt;code&gt;* First version creates two temporary arrays&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;First version creates only one temporary array&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;The sole difference between them is the one that makes second implementation better&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;code&#34;&gt;Code&lt;/h2&gt;&#xA;&lt;p&gt;As usual the &lt;a href=&#34;https://github.com/abhi1010/Algorithms/blob/master/Algo_codes/MergeSort.cpp&#34;&gt;code&lt;/a&gt; is available here:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Quick Sort</title>
      <link>http://abhipandey.com/2012/09/quick-sort/</link>
      <pubDate>Sat, 22 Sep 2012 14:24:00 +0000</pubDate>
      <guid>http://abhipandey.com/2012/09/quick-sort/</guid>
      <description>&lt;p&gt;Quick Sort is an efficient divide and conquer algorithm performed in two phases - partition and sorting phase.&lt;/p&gt;&#xA;&lt;p&gt;Here are few pointers to remember about Quick Sort:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Partitioning places all the elements less than the pivot in the left part of the array and greater elements in the right part&lt;/li&gt;&#xA;&lt;li&gt;Pivot element stays in its place&lt;/li&gt;&#xA;&lt;li&gt;After partitioning no element moves to the other side, of the pivot&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;pre&gt;&lt;code&gt;* This allows you to sort the elements, to the left or right of the pivot, independent of the other side&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Complexity is O(n log n)&lt;/li&gt;&#xA;&lt;li&gt;Often fast for small arrays with a few distinct values, repeated many times&lt;/li&gt;&#xA;&lt;li&gt;It is a conquer-and-divide algo; with most of the work happening during partitioning phase&lt;/li&gt;&#xA;&lt;li&gt;If you had to choose the optimum pivot then it should the median of the given array&lt;/li&gt;&#xA;&lt;li&gt;Not a stable sort&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;testing-notes&#34;&gt;Testing Notes&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Currently we have only one version of the code. We may try to do another version that is not recursive because putting the functions on stack will take up some memory and time&lt;/li&gt;&#xA;&lt;li&gt;Another version could be trying to use the pivot from the middle and then compare how do the random numbers compare against the sorted numbers&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;code&#34;&gt;Code&lt;/h2&gt;&#xA;&lt;p&gt;As usual the &lt;a href=&#34;https://github.com/abhi1010/Algorithms/blob/master/Algo_codes/QuickSort.cpp&#34;&gt;code&lt;/a&gt; is available here:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Insertion Sort</title>
      <link>http://abhipandey.com/2012/09/insertion-sort/</link>
      <pubDate>Mon, 17 Sep 2012 16:00:00 +0000</pubDate>
      <guid>http://abhipandey.com/2012/09/insertion-sort/</guid>
      <description>&lt;p&gt;Insertion Sort has the following properties:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;It works by moving elements one at a time&lt;/li&gt;&#xA;&lt;li&gt;Works really well for small data sets&lt;/li&gt;&#xA;&lt;li&gt;Consider going with this when the input data may already be sorted or partially sorted&lt;/li&gt;&#xA;&lt;li&gt;The may not have to move the elements around, thereby saving precious cycles&lt;/li&gt;&#xA;&lt;li&gt;Stable sort&lt;/li&gt;&#xA;&lt;li&gt;Keeps the original order of elements with equal values&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;testing-notes&#34;&gt;Testing Notes&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Had a very interesting time testing my code. I knew that swapping takes time. std::swap takes particularly longer. I disabled that from the beginning itself&lt;/li&gt;&#xA;&lt;li&gt;Even more interesting was how I thought of fixing my code which was running slowly&lt;/li&gt;&#xA;&lt;li&gt;Initially even running an array of size 1K was taking about 4s so I just made a minor change to remove &amp;ldquo;&amp;ndash; insertIndex ;&amp;rdquo; altogether and do the calculation in the previous line itself. That did the trick. Otherwise the code was taking hours and hours for 1M array size so I had to stop running it.&lt;/li&gt;&#xA;&lt;li&gt;I even tried improving the code a bit futher by ensuring that I do not call insertIndex-1 many a times but that didn&amp;rsquo;t really help - in fact made it worse again&lt;/li&gt;&#xA;&lt;li&gt;Sorted runs will run much faster because there&amp;rsquo;s no work to be done in those cases&lt;/li&gt;&#xA;&lt;li&gt;Would be a nice algo to use if your data is mostly sorted&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;code&#34;&gt;Code&lt;/h2&gt;&#xA;&lt;p&gt;As usual the &lt;a href=&#34;https://github.com/abhi1010/Algorithms/blob/master/Algo_codes/InsertionSort.cpp&#34;&gt;code&lt;/a&gt; is available here:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Radix Sort</title>
      <link>http://abhipandey.com/2012/09/radix-sort/</link>
      <pubDate>Thu, 13 Sep 2012 10:37:00 +0000</pubDate>
      <guid>http://abhipandey.com/2012/09/radix-sort/</guid>
      <description>&lt;p&gt;It is a non-comparative &lt;em&gt;integer&lt;/em&gt; sorting algorithm. It sorts data by grouping keys by the individual digits which share the same significant position and value. Think &lt;em&gt;Tens, Hundreds, Thousands&lt;/em&gt; etc. Some pointers about Radix Sort:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Even though it is an integer sorting algorithm, it is not restricted just to integers. Integers can also represent strings of characters&lt;/li&gt;&#xA;&lt;li&gt;Two types of radix sort are:&#xA;&lt;ul&gt;&#xA;&lt;li&gt;LSD (Least Significant Digit): Short keys come before long keys&lt;/li&gt;&#xA;&lt;li&gt;MSD (Most Significant Digit) Sorting: Lexicographic Order. Better for strings.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Uses Counting Sort as Sub Routine (which takes extra memory)&#xA;&lt;ul&gt;&#xA;&lt;li&gt;If memory is not really a concern, forget about this issue&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;Radix Sort, with at most d digits, takes O(d*(n+b)) time where b is the base&lt;/li&gt;&#xA;&lt;li&gt;Use Radix Sort over Counting Sort when the numbers range from 1 to n-square for example.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;Numbers&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Counting Sort</title>
      <link>http://abhipandey.com/2012/09/counting-sort/</link>
      <pubDate>Tue, 11 Sep 2012 10:03:00 +0000</pubDate>
      <guid>http://abhipandey.com/2012/09/counting-sort/</guid>
      <description>&lt;p&gt;Counting Sort is an integer sorting algorithm. It is not very famous when somebody talks about sorting algorithms but it is great when sorting integers. In fact, many a times it may even beat other Sorting Algorithms. The highlight of Counting Sort is that it creates a bucket array (to keep track of frequency of numbers) whose size is the maximum element in the provided array.&lt;/p&gt;&#xA;&lt;p&gt;We are looking to compare most of the sorting algorithms to find out which one performs better under different circumstances. One of the ways is to compare the complexity for each algorithm. The other way is to compare how well they perform based on the input they are all provided. I will post my code on Github but will start with Counting Sort here.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Visual Studio 2008 crashes while adding items</title>
      <link>http://abhipandey.com/2008/05/visual-studio-2008-crashes-while-adding-items/</link>
      <pubDate>Wed, 14 May 2008 21:43:00 +0000</pubDate>
      <guid>http://abhipandey.com/2008/05/visual-studio-2008-crashes-while-adding-items/</guid>
      <description>&lt;p&gt;Had this problem cropping up since months where I was trying to add items to Visual Studio 2008 Toolbox and it kept crashing.&lt;/p&gt;&#xA;&lt;p&gt;Finally got a work around, you should start it in safe mode. Here&amp;rsquo;s the procedure:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;devenv /safemode&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Then use Choose Items on toolbox and run through each of the tabs. Once you&#xA;accept any exceptions raised on loading controls, you can then open Visual&#xA;Studio normally and add items.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Google Analytics &amp; SWFAddress</title>
      <link>http://abhipandey.com/2008/04/google-analytics-swfaddress/</link>
      <pubDate>Sun, 06 Apr 2008 05:32:00 +0000</pubDate>
      <guid>http://abhipandey.com/2008/04/google-analytics-swfaddress/</guid>
      <description>&lt;p&gt;Recently found a bug slash issue with Google Analytics new javscript software (post-urchin v5). I had written the internal documentation for the company standards and somehow when those standards were put into practice, SWFAddress feature of flash stopped working the moment google analytics feature was enabled. Worst of all, the web pages failed to load! To cap it off, the website was working perfectly fine on Firefox 2, 3 and IE 7!! It was having trouble only on IE6.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Full Trust on Mapped Drive</title>
      <link>http://abhipandey.com/2008/03/full-trust-on-mapped-drive/</link>
      <pubDate>Mon, 31 Mar 2008 18:26:00 +0000</pubDate>
      <guid>http://abhipandey.com/2008/03/full-trust-on-mapped-drive/</guid>
      <description>&lt;p&gt;Sometimes, when opening a web project from another mapped drive (not your own computer&amp;rsquo;s hard disk) Visual Studio may complain something like this:&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;The project location is not trusted.&#xA;&#xA;Running the application may result in security exceptions when it&#xA;attempts to perform actions which require full trust.&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;The problem here is that .Net does not want to fully adhere to all security policies as your hard disk to this mapped drive as well as it does not know what kind of data it might have. If you want it to fully trust this mapped drive then you will have to use caspol for this purpose. Here&amp;rsquo;s how it is done:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Tag your namespaces</title>
      <link>http://abhipandey.com/2008/03/tag-your-namespaces/</link>
      <pubDate>Mon, 31 Mar 2008 08:23:00 +0000</pubDate>
      <guid>http://abhipandey.com/2008/03/tag-your-namespaces/</guid>
      <description>&lt;p&gt;Recently discovered a nifty little feature on .Net and though of sharing it.&lt;/p&gt;&#xA;&lt;p&gt;You can tag an assembly by giving it a name and then use this name throughout your class to access the classes inside this namespace.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;span style=&amp;quot;color:#0000ff;&amp;quot;&amp;gt;using&amp;lt;/span&amp;gt; asp=CompanyName.Data;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Now all the classes inside CompanyName.Data namespace can be accessed using the name asp (as if it was an instance of the namespace).&lt;/p&gt;&#xA;&lt;p&gt;One thing to note, however, is that the classes inside this namespace cannot be accessed directly and the word &amp;ldquo;asp&amp;rdquo; has to be used.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to protect from SQL Injections in ASP.NET</title>
      <link>http://abhipandey.com/2008/03/how-to-protect-from-sql-injections-in-asp.net/</link>
      <pubDate>Tue, 11 Mar 2008 07:55:00 +0000</pubDate>
      <guid>http://abhipandey.com/2008/03/how-to-protect-from-sql-injections-in-asp.net/</guid>
      <description>&lt;p&gt;Some good links to figure out how to save your code&amp;rsquo;s ass from being thrashed by SQL Injections&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/ms998271.aspx#paght000002_step2&#34;&gt;http://msdn2.microsoft.com/en-us/library/ms998271.aspx#paght000002_step2&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://msdn2.microsoft.com/en-us/library/bb355989.aspx#paght000003_step4&#34;&gt;http://msdn2.microsoft.com/en-us/library/bb355989.aspx#paght000003_step4&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Creating Custom Web Controls</title>
      <link>http://abhipandey.com/2008/03/creating-custom-web-controls/</link>
      <pubDate>Sat, 08 Mar 2008 22:30:00 +0000</pubDate>
      <guid>http://abhipandey.com/2008/03/creating-custom-web-controls/</guid>
      <description>&lt;p&gt;How do you extend a control? Let&amp;rsquo;s figure it out.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Why would you want to extend existing controls?&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;Because some functionality may not exist exactly as you may need it. For example, let&amp;rsquo;s take up ImageButton control example. It is a great control but it falls short when it comes to real world scenario. Mostly websites do a hover image clickable button where the text or background color of the button changes once you hover your mouse over it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>StringBuilder vs String joins</title>
      <link>http://abhipandey.com/2008/03/stringbuilder-vs-string-joins/</link>
      <pubDate>Sat, 08 Mar 2008 13:55:00 +0000</pubDate>
      <guid>http://abhipandey.com/2008/03/stringbuilder-vs-string-joins/</guid>
      <description>&lt;p&gt;For those who do not want to waste their time, here&amp;rsquo;s the gist for this whole article:&#xA;&lt;em&gt;StringBuilder performs better but you should try to use it when there&amp;rsquo;s lot of concatenation involved (normally more than 7 joins - start thinking about StringBuilder.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s move on for the lesser mortals. There has been a lot of debate about using StringBuilder instead of adding string like&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;&amp;lt;span style=&amp;quot;color:#606060;&amp;quot;&amp;gt;   1:&amp;lt;/span&amp;gt; strVariable += &amp;lt;span style=&amp;quot;color:#006080;&amp;quot;&amp;gt;&amp;quot; Add this string to my variable string&amp;quot;&amp;lt;/span&amp;gt;;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;What&amp;rsquo;s the darn difference?&lt;/p&gt;</description>
    </item>
    <item>
      <title>Blogs I like</title>
      <link>http://abhipandey.com/2008/03/blogs-i-like/</link>
      <pubDate>Sat, 08 Mar 2008 10:26:00 +0000</pubDate>
      <guid>http://abhipandey.com/2008/03/blogs-i-like/</guid>
      <description>&lt;p&gt;Two blogs i really like and follow many a times are:&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;SqlAuthority.com&#34;&gt;SqlAuthority.com&lt;/a&gt; - Excellent blog for Sql Server 2005. The guy has a very in-depth knowledge of Sql Server and I appreciate the way&lt;/p&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://weblogs.asp.net/scottgu&#34;&gt;Scott&amp;rsquo;s Blog&lt;/a&gt; - Another great blog where Scott Guthrie talks quite a bit about ASP.NET and tells the latest details coming in from Microsoft.&lt;/p&gt;&#xA;&lt;p&gt;Just today I found another interesting blog. This guy talks about the interesting aspects in programming.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Recursively read directories and list all files under it</title>
      <link>http://abhipandey.com/2008/03/recursively-read-directories-and-list-all-files-under-it/</link>
      <pubDate>Tue, 04 Mar 2008 07:49:00 +0000</pubDate>
      <guid>http://abhipandey.com/2008/03/recursively-read-directories-and-list-all-files-under-it/</guid>
      <description>&lt;script dark-style=&#34;true&#34;&#xA;  src=&#34;https://gist.github.com/abhi1010/a1bcc60b383a0bc72d5f.js&#34;&gt;&lt;/script&gt;</description>
    </item>
    <item>
      <title>Book Review: Head First Design Patterns</title>
      <link>http://abhipandey.com/2007/12/book-review-head-first-design-patterns/</link>
      <pubDate>Wed, 12 Dec 2007 02:31:00 +0000</pubDate>
      <guid>http://abhipandey.com/2007/12/book-review-head-first-design-patterns/</guid>
      <description>&lt;p&gt;What an amazing book this is! It is a must read for any developer who wants to develop long term codes/projects.&lt;/p&gt;&#xA;&lt;p&gt;The book looks at mostly the more important design patterns. The distinctive feature that stands out in this book is how it manages to make each pattern stand out against each other. It gives comparison between similar-looking patterns where necessary. It make the patterns &amp;ldquo;debate&amp;rdquo; against each other, get the birds-eye-view from &amp;ldquo;patterns guru and grasshopper discussion&amp;rdquo;, UML like &amp;ldquo;class diagrams with notes&amp;rdquo; to show how everything is gelling together.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Dynamically increase Label size [AutoSize]</title>
      <link>http://abhipandey.com/2007/11/dynamically-increase-label-size-autosize/</link>
      <pubDate>Fri, 23 Nov 2007 07:52:00 +0000</pubDate>
      <guid>http://abhipandey.com/2007/11/dynamically-increase-label-size-autosize/</guid>
      <description>&lt;p&gt;Recently I had to work on a windows form where the Labels are added dynamically onto the form. Some of you may think that setting AutoSize to true would fix the problem but it works only when you already have added that Label control onto the form, not when you are adding it dynamically.&lt;/p&gt;&#xA;&lt;p&gt;Despair not, there&amp;rsquo;s still a solution. Just create a label and set it&amp;rsquo;s text first then call this function:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Use of yield statement</title>
      <link>http://abhipandey.com/2007/10/use-of-yield-statement/</link>
      <pubDate>Fri, 26 Oct 2007 16:36:00 +0000</pubDate>
      <guid>http://abhipandey.com/2007/10/use-of-yield-statement/</guid>
      <description>&lt;p&gt;It might be a little late for this to appear but I have no qualms in accepting that I have finally embraced yield statement and see it as an excellent way of writing codes.&lt;/p&gt;&#xA;&lt;p&gt;I have had my fair share of writing small code fragments to read/process/write files and more often than that it is excel files. So I thought, there has to be an easier way than just creating common functions for Connections and processing functions - at that time yield statement came to the rescue. I have always had to read the excel file, one line after another - pretty much like a DataTable if you ask me.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
