<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>finance on Coders Digest</title>
    <link>http://abhipandey.com/categories/finance/</link>
    <description>Recent content in finance on Coders Digest</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 13 Oct 2024 00:33:29 +0800</lastBuildDate>
    <atom:link href="http://abhipandey.com/categories/finance/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Building an Options Volatility Visualization Tool</title>
      <link>http://abhipandey.com/2024/10/building-an-options-volatility-visualization-tool/</link>
      <pubDate>Sun, 13 Oct 2024 00:33:29 +0800</pubDate>
      <guid>http://abhipandey.com/2024/10/building-an-options-volatility-visualization-tool/</guid>
      <description>&lt;p&gt;In the world of financial trading, understanding options volatility is crucial for making informed decisions. In this post, I&amp;rsquo;ll break down a Python script that visualizes options volatility for various market ETFs and indices. This tool leverages the &lt;code&gt;volvisualizer&lt;/code&gt; library to generate insightful volatility charts and skew reports that can help traders identify market sentiment and potential opportunities.&lt;/p&gt;&#xA;&lt;h2 id=&#34;why-volatility-visualization-matters&#34;&gt;Why Volatility Visualization Matters&lt;/h2&gt;&#xA;&lt;p&gt;Before diving into the code, let&amp;rsquo;s understand why visualizing options volatility is so important:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Crypto Volume Selector: Building a Data-Driven Tool for Cryptocurrency Trading</title>
      <link>http://abhipandey.com/2023/11/crypto-volume-selector-building-a-data-driven-tool-for-cryptocurrency-trading/</link>
      <pubDate>Tue, 14 Nov 2023 09:30:00 +0800</pubDate>
      <guid>http://abhipandey.com/2023/11/crypto-volume-selector-building-a-data-driven-tool-for-cryptocurrency-trading/</guid>
      <description>&lt;p&gt;In the fast-paced world of cryptocurrency trading, making informed decisions based on market data is crucial. Today, I want to share a Python tool I&amp;rsquo;ve built that helps select cryptocurrencies based on their trading volume - a key metric that can indicate market interest and liquidity.&lt;/p&gt;&#xA;&lt;h2 id=&#34;why-trading-volume-matters&#34;&gt;Why Trading Volume Matters&lt;/h2&gt;&#xA;&lt;p&gt;Trading volume is one of the most important metrics when selecting cryptocurrencies for trading strategies. High volume typically indicates:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Better liquidity (easier to enter and exit positions)&lt;/li&gt;&#xA;&lt;li&gt;More market interest&lt;/li&gt;&#xA;&lt;li&gt;Potentially lower slippage&lt;/li&gt;&#xA;&lt;li&gt;More reliable technical indicators&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Volume, combined with price information, gives us the trading value - a measure of the total money flowing through a particular trading pair. This is often a more reliable indicator than just looking at price or volume in isolation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Understanding Iron Condor Screener with TastyTrade API</title>
      <link>http://abhipandey.com/2023/09/understanding-iron-condor-screener-with-tastytrade-api/</link>
      <pubDate>Sat, 02 Sep 2023 10:30:00 +0800</pubDate>
      <guid>http://abhipandey.com/2023/09/understanding-iron-condor-screener-with-tastytrade-api/</guid>
      <description>&lt;p&gt;In this blog post, I&amp;rsquo;ll break down a Python program that screens for iron condor options trading opportunities using the TastyTrade API. The code retrieves options data, calculates metrics for iron condor spreads, and ranks the results to find potentially profitable trades.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-an-iron-condor&#34;&gt;What is an Iron Condor?&lt;/h2&gt;&#xA;&lt;p&gt;Before diving into the code, let&amp;rsquo;s quickly review what an iron condor is. It&amp;rsquo;s an options trading strategy that involves:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Selling an out-of-the-money put&lt;/li&gt;&#xA;&lt;li&gt;Buying a further out-of-the-money put&lt;/li&gt;&#xA;&lt;li&gt;Selling an out-of-the-money call&lt;/li&gt;&#xA;&lt;li&gt;Buying a further out-of-the-money call&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;All options typically have the same expiration date. Iron condors are market-neutral strategies that profit when the underlying asset stays within a certain price range.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Automating Your Trading with TastyTrade&#39;s API</title>
      <link>http://abhipandey.com/2023/09/automating-your-trading-with-tastytrades-api/</link>
      <pubDate>Fri, 01 Sep 2023 09:00:00 +0800</pubDate>
      <guid>http://abhipandey.com/2023/09/automating-your-trading-with-tastytrades-api/</guid>
      <description>&lt;p&gt;In today&amp;rsquo;s fast-paced trading environment, automation can give you a significant edge. I&amp;rsquo;ve been working on a Python project that leverages the TastyTrade API to streamline various trading operations, from monitoring positions to setting automatic stop losses. In this post, I&amp;rsquo;ll walk through this integration and how it can help optimize your trading workflow.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-this-integration-does&#34;&gt;What This Integration Does&lt;/h2&gt;&#xA;&lt;p&gt;This Python library acts as a wrapper around TastyTrade&amp;rsquo;s API, making it easy to:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Upgrading from dual momentum</title>
      <link>http://abhipandey.com/2023/03/upgrading-from-dual-momentum/</link>
      <pubDate>Sat, 11 Mar 2023 00:33:29 +0800</pubDate>
      <guid>http://abhipandey.com/2023/03/upgrading-from-dual-momentum/</guid>
      <description>&lt;p&gt;In the world of algorithmic trading, momentum strategies hold a special place for their simplicity and effectiveness. Today, I want to share a Python implementation of a &amp;ldquo;Triple Momentum&amp;rdquo; strategy that I&amp;rsquo;ve been working with. This approach allows you to dynamically switch between three different assets based on their relative momentum.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-momentum-trading&#34;&gt;What is Momentum Trading?&lt;/h2&gt;&#xA;&lt;p&gt;Before diving into the code, let&amp;rsquo;s briefly understand what momentum trading is. The core idea is simple: assets that have performed well recently tend to continue performing well in the near future. By measuring and comparing the momentum of different assets, we can allocate our capital to the one showing the strongest trend.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mastering Automated Trading with Python and the Dhan API</title>
      <link>http://abhipandey.com/2023/01/mastering-automated-trading-with-python-and-the-dhan-api/</link>
      <pubDate>Sat, 28 Jan 2023 14:30:00 +0800</pubDate>
      <guid>http://abhipandey.com/2023/01/mastering-automated-trading-with-python-and-the-dhan-api/</guid>
      <description>&lt;p&gt;In today&amp;rsquo;s fast-paced financial markets, algorithmic trading has become increasingly accessible to retail investors. With the right tools and knowledge, you can automate your trading strategies and execute orders with precision. In this post, I&amp;rsquo;ll walk you through a comprehensive Python implementation for interacting with the Dhan trading platform&amp;rsquo;s API, which enables automated order placement, portfolio tracking, and more.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-dhan&#34;&gt;What is Dhan?&lt;/h2&gt;&#xA;&lt;p&gt;Dhan is an Indian trading platform that provides access to various financial markets through its API. This allows developers and traders to build custom trading applications, automate strategies, and manage portfolios programmatically.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building Robust Trading Strategies with a Python Backtesting Framework</title>
      <link>http://abhipandey.com/2022/04/building-robust-trading-strategies-with-a-python-backtesting-framework/</link>
      <pubDate>Mon, 11 Apr 2022 00:00:00 +0800</pubDate>
      <guid>http://abhipandey.com/2022/04/building-robust-trading-strategies-with-a-python-backtesting-framework/</guid>
      <description>&lt;p&gt;A few days ago we saw how to build a simple backtesting framework for algorithmic trading using the &lt;code&gt;backtrader&lt;/code&gt; Python library.&#xA;I showcased a special class called &lt;code&gt;StrategyForComparison&lt;/code&gt; that allowed for a flexible trading approach with various risk management options.&#xA;Now let&amp;rsquo;s see how you&amp;rsquo;d utilize it in &lt;code&gt;backtest.py&lt;/code&gt; code.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;ll walk through a powerful backtesting framework I&amp;rsquo;ve been using that offers comprehensive testing capabilities for algorithmic trading strategies, with code examples to help you understand how it all works.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Making the Most of Backtrader&#39;s Strategy Class: A Deep Dive into StrategyForComparison</title>
      <link>http://abhipandey.com/2022/04/making-the-most-of-backtraders-strategy-class-a-deep-dive-into-strategyforcomparison/</link>
      <pubDate>Wed, 06 Apr 2022 00:00:00 +0800</pubDate>
      <guid>http://abhipandey.com/2022/04/making-the-most-of-backtraders-strategy-class-a-deep-dive-into-strategyforcomparison/</guid>
      <description>&lt;p&gt;If you&amp;rsquo;re serious about algorithmic trading and backtesting in Python, you&amp;rsquo;ve likely encountered Backtrader - an excellent framework that gives you the freedom to test trading strategies with historical data. Today, I want to walk through a comprehensive strategy implementation I&amp;rsquo;ve been working with called &lt;code&gt;StrategyForComparison&lt;/code&gt;. This strategy showcases many of Backtrader&amp;rsquo;s powerful features while implementing a flexible trading approach with various risk management options.&lt;/p&gt;&#xA;&lt;h2 id=&#34;understanding-the-core-strategy&#34;&gt;Understanding the Core Strategy&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;StrategyForComparison&lt;/code&gt; is designed to be a flexible trading framework with multiple configurable components. At its core, it:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
