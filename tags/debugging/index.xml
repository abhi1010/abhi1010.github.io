<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>debugging on Coders Digest</title>
    <link>http://abhipandey.com/tags/debugging/</link>
    <description>Recent content in debugging on Coders Digest</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 02 Sep 2019 09:30:00 +0800</lastBuildDate>
    <atom:link href="http://abhipandey.com/tags/debugging/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Effective Log Management in Python: A Deep Dive into the get_logger Function</title>
      <link>http://abhipandey.com/2019/09/effective-log-management-in-python-a-deep-dive-into-the-get_logger-function/</link>
      <pubDate>Mon, 02 Sep 2019 09:30:00 +0800</pubDate>
      <guid>http://abhipandey.com/2019/09/effective-log-management-in-python-a-deep-dive-into-the-get_logger-function/</guid>
      <description>&lt;p&gt;Effective logging is a critical yet often overlooked aspect of application development. A well-implemented logging system can mean the difference between hours of frustrating debugging and a quick resolution when issues arise. In this post, I&amp;rsquo;ll walk through a powerful custom logging utility function called &lt;code&gt;get_logger&lt;/code&gt; that provides flexible, configurable logging capabilities for Python applications.&lt;/p&gt;&#xA;&lt;h2 id=&#34;understanding-the-get_logger-function&#34;&gt;Understanding the &lt;code&gt;get_logger&lt;/code&gt; Function&lt;/h2&gt;&#xA;&lt;p&gt;The &lt;code&gt;get_logger&lt;/code&gt; function creates a configured logger with console output and rotating file storage. Let&amp;rsquo;s break down what it does and how to use it effectively:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
