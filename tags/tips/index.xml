<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tips on Coders Digest</title>
    <link>http://abhi1010.github.io/tags/tips/</link>
    <description>Recent content in Tips on Coders Digest</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 19 May 2014 15:51:51 +0000</lastBuildDate>
    <atom:link href="http://abhi1010.github.io/tags/tips/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Setting up your VIM... Your Style</title>
      <link>http://abhi1010.github.io/2014/05/setting-up-your-vim...-your-style/</link>
      <pubDate>Mon, 19 May 2014 15:51:51 +0000</pubDate>
      
      <guid>http://abhi1010.github.io/2014/05/setting-up-your-vim...-your-style/</guid>
      <description>&lt;p&gt;Writing code using VIM can be a bit overwhelming but it helps creating a few shortcuts there to make your life easier. Here I will discuss a few.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;First of all, it is always a good idea to set up your tabs and spaces&lt;/li&gt;
&lt;li&gt;Set up a shortcut to:&lt;/li&gt;
&lt;li&gt;* Toggling of Auto-Indent while pasting source text; very useful in code (F2 in my provided script)

&lt;ul&gt;
&lt;li&gt;Toggling of Auto-Scroll of Split windows (F3 in my provided script)&lt;/li&gt;
&lt;li&gt;Macro for Folding functions within the source code (@q in my provided script)&lt;/li&gt;
&lt;li&gt;Smart case search - based on whether the input is in caps or not&lt;/li&gt;
&lt;li&gt;Toggling of Mouse Usage in VIM window - to allow quick selection of text (F12 in my provided script)&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please see the provided script below to have a look.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gist.github.com/abhi1010/6f190c9f3afd42881ef5&#34;&gt;https://gist.github.com/abhi1010/6f190c9f3afd42881ef5&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Getting a group of lines from a file</title>
      <link>http://abhi1010.github.io/2014/05/getting-a-group-of-lines-from-a-file/</link>
      <pubDate>Mon, 19 May 2014 09:45:57 +0000</pubDate>
      
      <guid>http://abhi1010.github.io/2014/05/getting-a-group-of-lines-from-a-file/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve had this need quite a few times to pull out a section of logs that would begin with a particular line and end with another. grep is not exactly useful there because it only prints out sections based on line counters (using -A/B/C) lines based on a single search pattern.&lt;/p&gt;

&lt;p&gt;I came up with a script that can run at almost same speeds using &lt;code&gt;grep/cat/awk&lt;/code&gt;. &lt;code&gt;awk&lt;/code&gt; is used to decide whether the end of the section has been reached or not. Some features of the script are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Since &lt;code&gt;awk&lt;/code&gt; script only toggles one variable it works seamlessly without delaying the actual work&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Works on gzip files as well&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;If you do not want to depend on grep or are unsure how many lines may be between begin and end keyword then replace gunzip with zcat and grep with cat.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Usage: &lt;code&gt;group filename printBeginKeyword printUntilKeyword NumOfLines&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let&amp;rsquo;s have a look at the script&amp;hellip;.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;&lt;a href=&#34;https://gist.github.com/abhi1010/924a5f12f3067ba0b3af&#34;&gt;https://gist.github.com/abhi1010/924a5f12f3067ba0b3af&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Tokenize a String using C&#43;&#43;</title>
      <link>http://abhi1010.github.io/2014/04/tokenize-a-string-using-c/</link>
      <pubDate>Tue, 08 Apr 2014 07:00:00 +0000</pubDate>
      
      <guid>http://abhi1010.github.io/2014/04/tokenize-a-string-using-c/</guid>
      <description>&lt;p&gt;Here&amp;rsquo;s a short snippet to split a string into multiple tokens; into a vector. As you will see that, if you run the code, boost version performs better because you can choose a number of delimiters to split your string instead of the vanilla version using the normal C++ code. Of course, you may also write your own code to do something like this but I was looking to do some short snippets.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gist.github.com/anonymous/0465925390f3442a7691&#34;&gt;https://gist.github.com/anonymous/0465925390f3442a7691&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;I have &lt;strong&gt;posted my code on &lt;a href=&#34;http://coliru.stacked-crooked.com/a/01e1c68ffd0199cd&#34;&gt;Stacked-Crooked&lt;/a&gt;&lt;/strong&gt; which you can view along with the output as well. It shows C++ doesn&amp;rsquo;t perform so well.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>CVS Cheat Sheet</title>
      <link>http://abhi1010.github.io/2013/07/cvs-cheat-sheet/</link>
      <pubDate>Wed, 03 Jul 2013 07:28:00 +0000</pubDate>
      
      <guid>http://abhi1010.github.io/2013/07/cvs-cheat-sheet/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve worked on CVS for a long time now and figured out that I&amp;rsquo;d save a lot of time if I started writing alias or functions for the numerous tasks that I did on them. I will put down some of them here so you may benefit from them.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Silently update and inform about the status of the files (recursive)&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;cvs -q -n update
&gt; 
&gt; &lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Same as earlier but will only do so for the current folder&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;cvs -Q -n update -l
&gt; 
&gt; &lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Finds out the cv[s] [m]odified list of files while also indentating them nicely with only the important data pulled out&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;cvs -Q status | egrep &#34;File: &#34; -A 4 | egrep -v &#34;Up-to-date&#34; | egrep &#34;File: &#34; -A 3 | sed -e &#34;s/ Status:/\t\tStatus:/&#34; -e &#34;s/,v$/\n-------------------------------------------------------------------------\n/&#34; -e &#34;s/.*${PWD##*/}\//Location:\t\t /&#34; -e &#34;s/Attic\///&#34; | egrep &#34;Location:|Repository|Status:|File:|--------
&gt; 
&gt; &lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Recursively add all files to CVS for committing from the current directory&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;find . -type d -print | grep -v CVS | xargs cvs add
&gt; 
&gt; &lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Doing a side by side diff (change the value of -W according to the width of the screen)&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;cvs -Q diff -t -y --suppress-common-lines -W 190 $*
&gt; 
&gt; &lt;/blockquote&gt;

&lt;p&gt;&lt;em&gt;Merging code from one branch to another&lt;/em&gt;&lt;/p&gt;

&lt;blockquote&gt;# Creates a command that you can use to &#34;merge&#34; your code from dev head to this current branch.   
# Ideally you want to run this command from a folder where you want the code to merge to....   
merge()   
{   
BRANCH=$(cat CVS/Tag | cut -c2-)   
CMD=$(echo cvs update -j $BRANCH -j Version_2_17_dev .)   
echo $CMD   
}   

&gt; 
&gt; &lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Cursor Control in VIM Search</title>
      <link>http://abhi1010.github.io/2013/06/cursor-control-in-vim-search/</link>
      <pubDate>Tue, 11 Jun 2013 07:05:00 +0000</pubDate>
      
      <guid>http://abhi1010.github.io/2013/06/cursor-control-in-vim-search/</guid>
      <description>&lt;p&gt;Found a great way to search for keywords &amp;amp;&amp;amp; control the location of cursor in vim. It is excellent if you want to do a particular task multiple times. Usually if you search the cursor will straight away take you to the start of search. What if you want to go to the end of the word you are searching for?&lt;/p&gt;

&lt;blockquote&gt;  
&gt; 
&gt; /pattern/e
&gt; 
&gt; &lt;/blockquote&gt;

&lt;p&gt;This takes you to the END of the keyword you are looking for.&lt;/p&gt;

&lt;p&gt;That’s not all. What if you want to go the second letter in that keyword? Change the pattern to as follows:&lt;/p&gt;

&lt;blockquote&gt;  
&gt; 
&gt; /pattern/s+1
&gt; 
&gt; &lt;/blockquote&gt;

&lt;p&gt;That’s great. But what if I want to go to the end of the keyword?&lt;/p&gt;

&lt;blockquote&gt;  
&gt; 
&gt; /pattern/e
&gt; 
&gt; &lt;/blockquote&gt;

&lt;p&gt;Awesome. Let’s review it through examples. Let’s say our phrase is “the brown fox jumped over the lazy dog” and we originally want to search for “brown”.&lt;/p&gt;

&lt;p&gt;&lt;table cellpadding=&#34;2&#34; cellspacing=&#34;0&#34; border=&#34;1&#34; width=&#34;947&#34; &gt;&lt;tbody &gt;     &lt;tr &gt;&lt;br /&gt;
&lt;td width=&#34;185&#34; valign=&#34;top&#34; &gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;PATTERN&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;/td&gt;&lt;br /&gt;
&lt;td width=&#34;286&#34; valign=&#34;top&#34; &gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;CURSOR LOCATED AT BEGINNING OF&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;/td&gt;&lt;br /&gt;
&lt;td width=&#34;474&#34; valign=&#34;top&#34; &gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DESCRIPTION&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;/td&gt;     &lt;/tr&gt;      &lt;tr &gt;&lt;br /&gt;
&lt;td width=&#34;185&#34; valign=&#34;top&#34; &gt;/brown
&lt;/td&gt;&lt;br /&gt;
&lt;td width=&#34;286&#34; valign=&#34;top&#34; &gt;brown fox….
&lt;/td&gt;&lt;br /&gt;
&lt;td width=&#34;474&#34; valign=&#34;top&#34; &gt;search and start at “brown”
&lt;/td&gt;     &lt;/tr&gt;      &lt;tr &gt;&lt;br /&gt;
&lt;td width=&#34;185&#34; valign=&#34;top&#34; &gt;/brown/s+2
&lt;/td&gt;&lt;br /&gt;
&lt;td width=&#34;286&#34; valign=&#34;top&#34; &gt;own fox…
&lt;/td&gt;&lt;br /&gt;
&lt;td width=&#34;474&#34; valign=&#34;top&#34; &gt;start at “brown” but move 2 letters from ‘start’
&lt;/td&gt;     &lt;/tr&gt;      &lt;tr &gt;&lt;br /&gt;
&lt;td width=&#34;185&#34; valign=&#34;top&#34; &gt;/brown/s-4
&lt;/td&gt;&lt;br /&gt;
&lt;td width=&#34;286&#34; valign=&#34;top&#34; &gt;the brown fox…
&lt;/td&gt;&lt;br /&gt;
&lt;td width=&#34;474&#34; valign=&#34;top&#34; &gt;start at “brown” but move 4 letters to the left from ‘start’
&lt;/td&gt;     &lt;/tr&gt;      &lt;tr &gt;&lt;br /&gt;
&lt;td width=&#34;185&#34; valign=&#34;top&#34; &gt;/brown/e
&lt;/td&gt;&lt;br /&gt;
&lt;td width=&#34;286&#34; valign=&#34;top&#34; &gt;n fox….
&lt;/td&gt;&lt;br /&gt;
&lt;td width=&#34;474&#34; valign=&#34;top&#34; &gt;search for “brown” but move to the end
&lt;/td&gt;     &lt;/tr&gt;      &lt;tr &gt;&lt;br /&gt;
&lt;td width=&#34;185&#34; valign=&#34;top&#34; &gt;/brown/e+2
&lt;/td&gt;&lt;br /&gt;
&lt;td width=&#34;286&#34; valign=&#34;top&#34; &gt;fox…
&lt;/td&gt;&lt;br /&gt;
&lt;td width=&#34;474&#34; valign=&#34;top&#34; &gt;search for “brown” but move 2 letters from the ‘end’
&lt;/td&gt;     &lt;/tr&gt;      &lt;tr &gt;&lt;br /&gt;
&lt;td width=&#34;185&#34; valign=&#34;top&#34; &gt;/brown/e-1
&lt;/td&gt;&lt;br /&gt;
&lt;td width=&#34;286&#34; valign=&#34;top&#34; &gt;wn fox…
&lt;/td&gt;&lt;br /&gt;
&lt;td width=&#34;474&#34; valign=&#34;top&#34; &gt;search for “brown” but move 1 letter to the left from the ‘end’
&lt;/td&gt;     &lt;/tr&gt;   &lt;/tbody&gt;&lt;/table&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Change Putty Window Title</title>
      <link>http://abhi1010.github.io/2013/04/change-putty-window-title/</link>
      <pubDate>Thu, 25 Apr 2013 07:02:00 +0000</pubDate>
      
      <guid>http://abhi1010.github.io/2013/04/change-putty-window-title/</guid>
      <description>&lt;p&gt;How to modify the Putty window title to a specific string?&lt;/p&gt;

&lt;p&gt;By default, you&amp;rsquo;d like to have the window title to give you the full path to the folder you are working from (working directory). PROMPT_COMMAND will help you with that.&lt;/p&gt;

&lt;p&gt;However, if you have too many windows where you are on the same folder then it may become confusing. To set your own title you&amp;rsquo;d like to use the title() function provided here. It sets the name to whatever you say.&lt;/p&gt;

&lt;p&gt;Please note that PS1 is only valid until you move your folders again. That is why the title() function also has to reset PROMPT_COMMAND.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s have a look at the script needed. Maybe you wanna put them in your .bashrc file.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gist.github.com/abhi1010/8eed9133ed91cbb42854&#34;&gt;https://gist.github.com/abhi1010/8eed9133ed91cbb42854&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Google Analytics &amp; SWFAddress</title>
      <link>http://abhi1010.github.io/2008/04/google-analytics--swfaddress/</link>
      <pubDate>Sun, 06 Apr 2008 05:32:00 +0000</pubDate>
      
      <guid>http://abhi1010.github.io/2008/04/google-analytics--swfaddress/</guid>
      <description>&lt;p&gt;Recently found a bug slash issue with Google Analytics new javscript software (post-urchin v5). I had written the internal documentation for the company standards and somehow when those standards were put into practice, SWFAddress feature of flash stopped working the moment google analytics feature was enabled. Worst of all, the web pages failed to load! To cap it off, the website was working perfectly fine on Firefox 2, 3 and IE 7!! It was having trouble only on IE6.&lt;/p&gt;

&lt;p&gt;I tried a lot of ways but none seem to worked. Finally found a blog that remotely talked about SWFAddress!&lt;/p&gt;

&lt;p&gt;Well, the problem turns out that SWFAddress uses &lt;strong&gt;ExternalInterface.call()&lt;/strong&gt; instead of getUrl() function internally and they don&amp;rsquo;t go well together if used together.&lt;/p&gt;

&lt;p&gt;The solution was simple, since flash is using SWFAddress feature, every getUrl should be replaced with ExternalInterface.call(). Needless to say, everything seemed perfect again.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Full Trust on Mapped Drive</title>
      <link>http://abhi1010.github.io/2008/03/full-trust-on-mapped-drive/</link>
      <pubDate>Mon, 31 Mar 2008 18:26:00 +0000</pubDate>
      
      <guid>http://abhi1010.github.io/2008/03/full-trust-on-mapped-drive/</guid>
      <description>&lt;p&gt;Sometimes, when opening a web project from another mapped drive (not your own computer&amp;rsquo;s hard disk) Visual Studio may complain something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;The project location is not trusted.




Running the application may result in security exceptions when it
attempts to perform actions which require full trust.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The problem here is that .Net does not want to fully adhere to all security policies as your hard disk to this mapped drive as well as it does not know what kind of data it might have. If you want it to fully trust this mapped drive then you will have to use caspol for this purpose. Here&amp;rsquo;s how it is done:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;c:&amp;gt;caspol -q -machine -addgroup 1 -url file://W:/* FullTrust -name &amp;ldquo;W Drive&amp;rdquo;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Once this new code group is in place, any new .NET processes you start will give any assemblies on the W drive full trust&lt;strong&gt;.&lt;/strong&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Talk to my... Flash</title>
      <link>http://abhi1010.github.io/2008/03/talk-to-my...-flash/</link>
      <pubDate>Mon, 03 Mar 2008 04:58:00 +0000</pubDate>
      
      <guid>http://abhi1010.github.io/2008/03/talk-to-my...-flash/</guid>
      <description>&lt;p&gt;According to normal acceptable behaviour it is not possible to let flash talk to the computer, be it on desktop or web browser.&lt;/p&gt;

&lt;p&gt;There are always ways around a problem and there&amp;rsquo;s one in this case as well.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Windows Forms&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you wanted to access .net functions on windows form then probably a good way to do that would be through ShockWaveFlashObjects library. It wraps all the functions that are available in ShockWave Objects and makes them available to you in .Net type safe way.&lt;/p&gt;

&lt;p&gt;The easiest of ways to send data back and forth would be through
&amp;ldquo;fscommand&amp;rdquo; function. The concept is to embed a flash file in windows form and then make use of fscommand function.&lt;/p&gt;

&lt;p&gt;Tip: Remember to remove the blue window bondary at the top so the flash appears as if its a standalone object and not embedded inside another form!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Websites&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you wanted to talk over a web page then an easy way out would be to use AMF.Net software. It is a freeware and very easy to use as well. In the words of its official &lt;a href=&#34;http://amfnet.openmymind.net/overview/default.aspx&#34;&gt;website&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;em&gt;&amp;ldquo;AMF enables developers to build powerful flash-based applications driven by databases and rich business layers.
AMF.NET is a .NET gateway sitting between a Flash movie and .NET code. The goal of AMF.NET is to promote proper N-Tier development by allowing your existing business layer (written in .NET) to be consumed by Flash without requiring any modification.&amp;rdquo;&lt;/em&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Use of yield statement</title>
      <link>http://abhi1010.github.io/2007/10/use-of-yield-statement/</link>
      <pubDate>Fri, 26 Oct 2007 16:36:00 +0000</pubDate>
      
      <guid>http://abhi1010.github.io/2007/10/use-of-yield-statement/</guid>
      <description>&lt;p&gt;It might be a little late for this to appear but I have no qualms in accepting that I have finally embraced yield statement and see it as an excellent way of writing codes.&lt;/p&gt;

&lt;p&gt;I have had my fair share of writing small code fragments to read/process/write files and more often than that it is excel files. So I thought, there has to be an easier way than just creating common functions for Connections and processing functions - at that time yield statement came to the rescue. I have always had to read the excel file, one line after another - pretty much like a DataTable if you ask me.&lt;/p&gt;

&lt;p&gt;The best way to put the whole process of reading the excel file is to automate reading, iterating and closing of the excel files. It is done by yield statement as I can &amp;ldquo;yield&amp;rdquo; the data of the excel through DataReader (OdbcDataReader in my case).&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://gist.github.com/abhi1010/36ecc206fc5f61f4b4bc&#34;&gt;https://gist.github.com/abhi1010/36ecc206fc5f61f4b4bc&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This way, the function is always common - it is always supposed to read the excel, iterate through it. The data that I need is always in the DataReader so I thought let&amp;rsquo;s just return the data itself! The rest of the function is pretty much normal. The biggest gain is that I don&amp;rsquo;t have to change the structure of the function. The same function can now be used for multiple excel sheets. Have a look at the code.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>