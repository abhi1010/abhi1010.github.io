<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Strategy on Coders Digest</title>
    <link>http://abhipandey.com/tags/strategy/</link>
    <description>Recent content in Strategy on Coders Digest</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 11 Mar 2023 00:33:29 +0800</lastBuildDate>
    <atom:link href="http://abhipandey.com/tags/strategy/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Upgrading from dual momentum</title>
      <link>http://abhipandey.com/2023/03/upgrading-from-dual-momentum/</link>
      <pubDate>Sat, 11 Mar 2023 00:33:29 +0800</pubDate>
      <guid>http://abhipandey.com/2023/03/upgrading-from-dual-momentum/</guid>
      <description>&lt;p&gt;In the world of algorithmic trading, momentum strategies hold a special place for their simplicity and effectiveness. Today, I want to share a Python implementation of a &amp;ldquo;Triple Momentum&amp;rdquo; strategy that I&amp;rsquo;ve been working with. This approach allows you to dynamically switch between three different assets based on their relative momentum.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-momentum-trading&#34;&gt;What is Momentum Trading?&lt;/h2&gt;&#xA;&lt;p&gt;Before diving into the code, let&amp;rsquo;s briefly understand what momentum trading is. The core idea is simple: assets that have performed well recently tend to continue performing well in the near future. By measuring and comparing the momentum of different assets, we can allocate our capital to the one showing the strongest trend.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
