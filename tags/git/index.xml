<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on Coders Digest</title>
    <link>http://abhipandey.com/tags/git/</link>
    <description>Recent content in Git on Coders Digest</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 04 Nov 2015 07:49:00 +0000</lastBuildDate>
    
	<atom:link href="http://abhipandey.com/tags/git/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Lambda Basics with Python using Github Webhooks or API Gateway</title>
      <link>http://abhipandey.com/2015/11/lambda-basics-with-python-using-github-webhooks-or-api-gateway/</link>
      <pubDate>Wed, 04 Nov 2015 07:49:00 +0000</pubDate>
      
      <guid>http://abhipandey.com/2015/11/lambda-basics-with-python-using-github-webhooks-or-api-gateway/</guid>
      <description>I recently needed to call a command whenever there was a push on my Github repo. Since this was related to AWS tasks, I figured aws lambda is a good candidate. Here I will talk about the steps I took to enable all of this using aws lambda, python. As a side note, I will also elaborate on using API gateway to call upon the lambda itself.
In a nutshell, what I will talk about:</description>
    </item>
    
    <item>
      <title>Automated Git Mirror With GitHub or Gitlab or Bitbucket</title>
      <link>http://abhipandey.com/2015/09/automated-git-mirror-with-github-or-gitlab-or-bitbucket/</link>
      <pubDate>Sun, 27 Sep 2015 13:30:10 +0800</pubDate>
      
      <guid>http://abhipandey.com/2015/09/automated-git-mirror-with-github-or-gitlab-or-bitbucket/</guid>
      <description>Experience with Gitlab CI   Git Mirror from Gitlab to Bitbucket using Gitlab CI
  Had to move from BitBucket to Gitlab; which is really great, btw. However, there was one tiny issue here - Gitlab was not supported by Shippable. As you may know already Shippable is a hosted cloud platform that provides hosted continuous integration. We use it in our current setup to do a full testing and deployment onto AWS Elastic Beanstalk.</description>
    </item>
    
    <item>
      <title>Git LOC Stats by Time Range</title>
      <link>http://abhipandey.com/2015/09/git-loc-stats-by-time-range/</link>
      <pubDate>Thu, 17 Sep 2015 11:06:06 +0800</pubDate>
      
      <guid>http://abhipandey.com/2015/09/git-loc-stats-by-time-range/</guid>
      <description>Recently had an interest in seeing how many LOC were committed to the code base over a particular period of time. After some tinkering around, mainly to find out the correct format for time ranges, decided to use the following bash script for finding coding stats. Following sample is to find out lines added or removed during the year 2014.
$ git log --after=&amp;#34;2014-1-1&amp;#34; --before=&amp;#34;2014-12-31&amp;#34; --pretty=tformat: --numstat | awk &amp;#39;{ if ( $2 !</description>
    </item>
    
    <item>
      <title>Using External Tools with Git Diff</title>
      <link>http://abhipandey.com/2015/09/using-external-tools-with-git-diff/</link>
      <pubDate>Thu, 10 Sep 2015 00:18:24 +0800</pubDate>
      
      <guid>http://abhipandey.com/2015/09/using-external-tools-with-git-diff/</guid>
      <description>If you want to view what has changed since one commit to another, it is quite easy to view the diff.
git diff 5fad06c..0a504fa You will get something like this:
diff --git a/modules/file_1.erb b/modules/file_1.erb index 0538da0..6621d93 100644 --- a/modules/file_1.erb +++ b/modules/file_1.erb @@ -5,8 +5,8 @@  // Algo settings &amp;#34;Carbo&amp;#34;: { - &amp;#34;active-instrument&amp;#34;: &amp;#34;SGX/NK15&amp;#34;, - &amp;#34;hedge-instrument&amp;#34;: &amp;#34;SGX/NK16&amp;#34;, + &amp;#34;active-instrument&amp;#34;: &amp;#34;SGX/NK17&amp;#34;, + &amp;#34;hedge-instrument&amp;#34;: &amp;#34;SGX/NK18&amp;#34;,  &amp;#34;owner-app-id&amp;#34;: &amp;#34;abhi1010&amp;#34;,  What if you wanted a use an external tool like meld to view the diff, in a nice beautiful side by side view?</description>
    </item>
    
    <item>
      <title>Updating Django Source with Docker Deployments</title>
      <link>http://abhipandey.com/2015/09/updating-django-source-with-docker-deployments/</link>
      <pubDate>Fri, 04 Sep 2015 00:11:51 +0800</pubDate>
      
      <guid>http://abhipandey.com/2015/09/updating-django-source-with-docker-deployments/</guid>
      <description>While deploying docker multiple times, you may not want to copy over your Django source code every time you do a deployment.
Setting up supervisord Luckily there is an easy way to manage this. Since you are working with Django, there is a good chance that you are also managing the processes (like uwsgi) with supervisord.
Here are some of the steps that you can take with supervisord
 Set up a new process in supervisord Do not allow it to autorestart since it will be a one-shot process Call another script in any format to update the source code  As an example, I use bash to update my source code through git   Here&amp;rsquo;s a sample code:</description>
    </item>
    
  </channel>
</rss>