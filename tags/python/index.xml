<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on Coders Digest</title>
    <link>http://abhipandey.com/tags/python/</link>
    <description>Recent content in Python on Coders Digest</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 13 Oct 2024 00:33:29 +0800</lastBuildDate>
    <atom:link href="http://abhipandey.com/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Building an Options Volatility Visualization Tool</title>
      <link>http://abhipandey.com/2024/10/building-an-options-volatility-visualization-tool/</link>
      <pubDate>Sun, 13 Oct 2024 00:33:29 +0800</pubDate>
      <guid>http://abhipandey.com/2024/10/building-an-options-volatility-visualization-tool/</guid>
      <description>&lt;p&gt;In the world of financial trading, understanding options volatility is crucial for making informed decisions. In this post, I&amp;rsquo;ll break down a Python script that visualizes options volatility for various market ETFs and indices. This tool leverages the &lt;code&gt;volvisualizer&lt;/code&gt; library to generate insightful volatility charts and skew reports that can help traders identify market sentiment and potential opportunities.&lt;/p&gt;&#xA;&lt;h2 id=&#34;why-volatility-visualization-matters&#34;&gt;Why Volatility Visualization Matters&lt;/h2&gt;&#xA;&lt;p&gt;Before diving into the code, let&amp;rsquo;s understand why visualizing options volatility is so important:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Crypto Volume Selector: Building a Data-Driven Tool for Cryptocurrency Trading</title>
      <link>http://abhipandey.com/2023/11/crypto-volume-selector-building-a-data-driven-tool-for-cryptocurrency-trading/</link>
      <pubDate>Tue, 14 Nov 2023 09:30:00 +0800</pubDate>
      <guid>http://abhipandey.com/2023/11/crypto-volume-selector-building-a-data-driven-tool-for-cryptocurrency-trading/</guid>
      <description>&lt;p&gt;In the fast-paced world of cryptocurrency trading, making informed decisions based on market data is crucial. Today, I want to share a Python tool I&amp;rsquo;ve built that helps select cryptocurrencies based on their trading volume - a key metric that can indicate market interest and liquidity.&lt;/p&gt;&#xA;&lt;h2 id=&#34;why-trading-volume-matters&#34;&gt;Why Trading Volume Matters&lt;/h2&gt;&#xA;&lt;p&gt;Trading volume is one of the most important metrics when selecting cryptocurrencies for trading strategies. High volume typically indicates:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Better liquidity (easier to enter and exit positions)&lt;/li&gt;&#xA;&lt;li&gt;More market interest&lt;/li&gt;&#xA;&lt;li&gt;Potentially lower slippage&lt;/li&gt;&#xA;&lt;li&gt;More reliable technical indicators&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;Volume, combined with price information, gives us the trading value - a measure of the total money flowing through a particular trading pair. This is often a more reliable indicator than just looking at price or volume in isolation.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Understanding Iron Condor Screener with TastyTrade API</title>
      <link>http://abhipandey.com/2023/09/understanding-iron-condor-screener-with-tastytrade-api/</link>
      <pubDate>Sat, 02 Sep 2023 10:30:00 +0800</pubDate>
      <guid>http://abhipandey.com/2023/09/understanding-iron-condor-screener-with-tastytrade-api/</guid>
      <description>&lt;p&gt;In this blog post, I&amp;rsquo;ll break down a Python program that screens for iron condor options trading opportunities using the TastyTrade API. The code retrieves options data, calculates metrics for iron condor spreads, and ranks the results to find potentially profitable trades.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-an-iron-condor&#34;&gt;What is an Iron Condor?&lt;/h2&gt;&#xA;&lt;p&gt;Before diving into the code, let&amp;rsquo;s quickly review what an iron condor is. It&amp;rsquo;s an options trading strategy that involves:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Selling an out-of-the-money put&lt;/li&gt;&#xA;&lt;li&gt;Buying a further out-of-the-money put&lt;/li&gt;&#xA;&lt;li&gt;Selling an out-of-the-money call&lt;/li&gt;&#xA;&lt;li&gt;Buying a further out-of-the-money call&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;All options typically have the same expiration date. Iron condors are market-neutral strategies that profit when the underlying asset stays within a certain price range.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Automating Your Trading with TastyTrade&#39;s API</title>
      <link>http://abhipandey.com/2023/09/automating-your-trading-with-tastytrades-api/</link>
      <pubDate>Fri, 01 Sep 2023 09:00:00 +0800</pubDate>
      <guid>http://abhipandey.com/2023/09/automating-your-trading-with-tastytrades-api/</guid>
      <description>&lt;p&gt;In today&amp;rsquo;s fast-paced trading environment, automation can give you a significant edge. I&amp;rsquo;ve been working on a Python project that leverages the TastyTrade API to streamline various trading operations, from monitoring positions to setting automatic stop losses. In this post, I&amp;rsquo;ll walk through this integration and how it can help optimize your trading workflow.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-this-integration-does&#34;&gt;What This Integration Does&lt;/h2&gt;&#xA;&lt;p&gt;This Python library acts as a wrapper around TastyTrade&amp;rsquo;s API, making it easy to:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Upgrading from dual momentum</title>
      <link>http://abhipandey.com/2023/03/upgrading-from-dual-momentum/</link>
      <pubDate>Sat, 11 Mar 2023 00:33:29 +0800</pubDate>
      <guid>http://abhipandey.com/2023/03/upgrading-from-dual-momentum/</guid>
      <description>&lt;p&gt;In the world of algorithmic trading, momentum strategies hold a special place for their simplicity and effectiveness. Today, I want to share a Python implementation of a &amp;ldquo;Triple Momentum&amp;rdquo; strategy that I&amp;rsquo;ve been working with. This approach allows you to dynamically switch between three different assets based on their relative momentum.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-momentum-trading&#34;&gt;What is Momentum Trading?&lt;/h2&gt;&#xA;&lt;p&gt;Before diving into the code, let&amp;rsquo;s briefly understand what momentum trading is. The core idea is simple: assets that have performed well recently tend to continue performing well in the near future. By measuring and comparing the momentum of different assets, we can allocate our capital to the one showing the strongest trend.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Seamless Data Flow: Using Google Sheets API with pandas DataFrames</title>
      <link>http://abhipandey.com/2023/02/seamless-data-flow-using-google-sheets-api-with-pandas-dataframes/</link>
      <pubDate>Mon, 27 Feb 2023 09:30:00 +0800</pubDate>
      <guid>http://abhipandey.com/2023/02/seamless-data-flow-using-google-sheets-api-with-pandas-dataframes/</guid>
      <description>&lt;p&gt;Working with data often means juggling between different platforms and formats. Google Sheets is a powerful collaborative tool, but its real potential emerges when you can programmatically access and manipulate your spreadsheet data. In this post, I&amp;rsquo;ll walk through how to create a robust integration between Google Sheets and pandas DataFrames in Python.&lt;/p&gt;&#xA;&lt;h2 id=&#34;why-connect-google-sheets-with-pandas&#34;&gt;Why Connect Google Sheets with pandas?&lt;/h2&gt;&#xA;&lt;p&gt;Before diving into the code, let&amp;rsquo;s consider why this combination is so powerful:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mastering Automated Trading with Python and the Dhan API</title>
      <link>http://abhipandey.com/2023/01/mastering-automated-trading-with-python-and-the-dhan-api/</link>
      <pubDate>Sat, 28 Jan 2023 14:30:00 +0800</pubDate>
      <guid>http://abhipandey.com/2023/01/mastering-automated-trading-with-python-and-the-dhan-api/</guid>
      <description>&lt;p&gt;In today&amp;rsquo;s fast-paced financial markets, algorithmic trading has become increasingly accessible to retail investors. With the right tools and knowledge, you can automate your trading strategies and execute orders with precision. In this post, I&amp;rsquo;ll walk you through a comprehensive Python implementation for interacting with the Dhan trading platform&amp;rsquo;s API, which enables automated order placement, portfolio tracking, and more.&lt;/p&gt;&#xA;&lt;h2 id=&#34;what-is-dhan&#34;&gt;What is Dhan?&lt;/h2&gt;&#xA;&lt;p&gt;Dhan is an Indian trading platform that provides access to various financial markets through its API. This allows developers and traders to build custom trading applications, automate strategies, and manage portfolios programmatically.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Building Robust Trading Strategies with a Python Backtesting Framework</title>
      <link>http://abhipandey.com/2022/04/building-robust-trading-strategies-with-a-python-backtesting-framework/</link>
      <pubDate>Mon, 11 Apr 2022 00:00:00 +0800</pubDate>
      <guid>http://abhipandey.com/2022/04/building-robust-trading-strategies-with-a-python-backtesting-framework/</guid>
      <description>&lt;p&gt;A few days ago we saw how to build a simple backtesting framework for algorithmic trading using the &lt;code&gt;backtrader&lt;/code&gt; Python library.&#xA;I showcased a special class called &lt;code&gt;StrategyForComparison&lt;/code&gt; that allowed for a flexible trading approach with various risk management options.&#xA;Now let&amp;rsquo;s see how you&amp;rsquo;d utilize it in &lt;code&gt;backtest.py&lt;/code&gt; code.&lt;/p&gt;&#xA;&lt;p&gt;I&amp;rsquo;ll walk through a powerful backtesting framework I&amp;rsquo;ve been using that offers comprehensive testing capabilities for algorithmic trading strategies, with code examples to help you understand how it all works.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Making the Most of Backtrader&#39;s Strategy Class: A Deep Dive into StrategyForComparison</title>
      <link>http://abhipandey.com/2022/04/making-the-most-of-backtraders-strategy-class-a-deep-dive-into-strategyforcomparison/</link>
      <pubDate>Wed, 06 Apr 2022 00:00:00 +0800</pubDate>
      <guid>http://abhipandey.com/2022/04/making-the-most-of-backtraders-strategy-class-a-deep-dive-into-strategyforcomparison/</guid>
      <description>&lt;p&gt;If you&amp;rsquo;re serious about algorithmic trading and backtesting in Python, you&amp;rsquo;ve likely encountered Backtrader - an excellent framework that gives you the freedom to test trading strategies with historical data. Today, I want to walk through a comprehensive strategy implementation I&amp;rsquo;ve been working with called &lt;code&gt;StrategyForComparison&lt;/code&gt;. This strategy showcases many of Backtrader&amp;rsquo;s powerful features while implementing a flexible trading approach with various risk management options.&lt;/p&gt;&#xA;&lt;h2 id=&#34;understanding-the-core-strategy&#34;&gt;Understanding the Core Strategy&lt;/h2&gt;&#xA;&lt;p&gt;&lt;code&gt;StrategyForComparison&lt;/code&gt; is designed to be a flexible trading framework with multiple configurable components. At its core, it:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Effective Log Management in Python: A Deep Dive into the get_logger Function</title>
      <link>http://abhipandey.com/2019/09/effective-log-management-in-python-a-deep-dive-into-the-get_logger-function/</link>
      <pubDate>Mon, 02 Sep 2019 09:30:00 +0800</pubDate>
      <guid>http://abhipandey.com/2019/09/effective-log-management-in-python-a-deep-dive-into-the-get_logger-function/</guid>
      <description>&lt;p&gt;Effective logging is a critical yet often overlooked aspect of application development. A well-implemented logging system can mean the difference between hours of frustrating debugging and a quick resolution when issues arise. In this post, I&amp;rsquo;ll walk through a powerful custom logging utility function called &lt;code&gt;get_logger&lt;/code&gt; that provides flexible, configurable logging capabilities for Python applications.&lt;/p&gt;&#xA;&lt;h2 id=&#34;understanding-the-get_logger-function&#34;&gt;Understanding the &lt;code&gt;get_logger&lt;/code&gt; Function&lt;/h2&gt;&#xA;&lt;p&gt;The &lt;code&gt;get_logger&lt;/code&gt; function creates a configured logger with console output and rotating file storage. Let&amp;rsquo;s break down what it does and how to use it effectively:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mastering File Operations in Python: A Deep Dive into a Practical Utils Module</title>
      <link>http://abhipandey.com/2018/05/mastering-file-operations-in-python-a-deep-dive-into-a-practical-utils-module/</link>
      <pubDate>Sun, 20 May 2018 09:30:00 +0800</pubDate>
      <guid>http://abhipandey.com/2018/05/mastering-file-operations-in-python-a-deep-dive-into-a-practical-utils-module/</guid>
      <description>&lt;p&gt;File operations are the bread and butter of many Python applications. Whether you&amp;rsquo;re working with data processing, automation, or building robust applications, having a reliable set of utilities to handle files can save you countless hours of development time.&lt;/p&gt;&#xA;&lt;p&gt;In this post, I&amp;rsquo;ll explore a versatile file utilities module that I&amp;rsquo;ve been refining for various projects. This collection of functions demonstrates practical approaches to common file operation tasks that you might encounter in your day-to-day development.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Running invoke from other folders</title>
      <link>http://abhipandey.com/2016/11/running-invoke-from-other-folders/</link>
      <pubDate>Sun, 13 Nov 2016 00:33:29 +0800</pubDate>
      <guid>http://abhipandey.com/2016/11/running-invoke-from-other-folders/</guid>
      <description>&lt;p&gt;While working on big projects, sometimes, you have &lt;code&gt;invoke&lt;/code&gt; tasks lying around&#xA;in different places. It wouldn&amp;rsquo;t make sense to merge them together&#xA;but rather help each other out as and when needed.&lt;/p&gt;&#xA;&lt;p&gt;One such way for this would be to search for invoke tasks from other folders&#xA;and run them directly when they can be used.&lt;/p&gt;&#xA;&lt;p&gt;I had to go for this approach for a monolithic repo where multiple projects&#xA;were being built in mostly similar style with minor modifications.&#xA;All of them would have the same set of commands along with same style of running those commands.&#xA;I didn&amp;rsquo;t want to set up the same &lt;code&gt;invoke&lt;/code&gt; task for all individual projects but rather&#xA;a common set of tasks that could be re-used by each one of them.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Gitlab CLI API reference</title>
      <link>http://abhipandey.com/2016/07/gitlab-cli-api-reference/</link>
      <pubDate>Tue, 05 Jul 2016 23:26:44 +0800</pubDate>
      <guid>http://abhipandey.com/2016/07/gitlab-cli-api-reference/</guid>
      <description>&lt;p&gt;Here&amp;rsquo;s a short tutorial on setting up gitlab cli for yourselves.&#xA;It is extremely user friendly and you can take almost any action that you need.&#xA;Anything that the UI provides is also available over cli or web services -&#xA;both of which have examples here.&lt;/p&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s get started.&lt;/p&gt;&#xA;&lt;h2 id=&#34;gitlab-cli&#34;&gt;gitlab cli&lt;/h2&gt;&#xA;&lt;h3 id=&#34;installing-the-gitlab-cli&#34;&gt;Installing the gitlab CLI&lt;/h3&gt;&#xA;&lt;pre&gt;&lt;code&gt;# http://narkoz.github.io/gitlab/configuration&#xA;gem install gitlab&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h3 id=&#34;configuration&#34;&gt;Configuration&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export &lt;span style=&#34;color:#eedd82&#34;&gt;GITLAB_API_ENDPOINT&lt;/span&gt;=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;http://gitlab.com/api/v3&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;export &lt;span style=&#34;color:#eedd82&#34;&gt;GITLAB_API_PRIVATE_TOKEN&lt;/span&gt;=&lt;span style=&#34;color:#87ceeb&#34;&gt;&amp;#39;YOUR_TOKEN_&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;available-commands&#34;&gt;Available commands&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ gitlab&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|   Help Topics   |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| Branches        |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| Commits         |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| Groups          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| Issues          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| Labels          |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| MergeRequests   |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| Milestones      |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| Namespaces      |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| Notes           |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| Projects        |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| Repositories    |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| RepositoryFiles |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| Snippets        |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| SystemHooks     |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| Users           |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+-----------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;sample-cli-commands&#34;&gt;Sample CLI commands&lt;/h3&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# Check the list of Projects&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ gitlab projects&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# Based on the response, we know reconwisev2 is ID 487928&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0f0&#34;&gt;# Let&amp;#39;s find out the list of labels in it&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ gitlab labels &lt;span style=&#34;color:#f60&#34;&gt;487928&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------+---------+--------------------+--------------+-------------------+---------------------------+------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|                                                      Gitlab.labels &lt;span style=&#34;color:#f60&#34;&gt;487928&lt;/span&gt;                                                      |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------+---------+--------------------+--------------+-------------------+---------------------------+------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| closed_issues_count | color   | description        | name         | open_issues_count | open_merge_requests_count | subscribed |&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------+---------+--------------------+--------------+-------------------+---------------------------+------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| &lt;span style=&#34;color:#f60&#34;&gt;2&lt;/span&gt;                   | &lt;span style=&#34;color:#0f0&#34;&gt;#ff0000 | null               | !Blocker     | 0                 | 0                         | false      |&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------+---------+--------------------+--------------+-------------------+---------------------------+------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| &lt;span style=&#34;color:#f60&#34;&gt;2&lt;/span&gt;                   | &lt;span style=&#34;color:#0f0&#34;&gt;#0033cc | null               | #AWS         | 8                 | 0                         | false      |&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------+---------+--------------------+--------------+-------------------+---------------------------+------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| &lt;span style=&#34;color:#f60&#34;&gt;27&lt;/span&gt;                  | &lt;span style=&#34;color:#0f0&#34;&gt;#428bca | null               | #Bug         | 2                 | 0                         | false      |&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------+---------+--------------------+--------------+-------------------+---------------------------+------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| &lt;span style=&#34;color:#f60&#34;&gt;3&lt;/span&gt;                   | &lt;span style=&#34;color:#0f0&#34;&gt;#0033cc | null               | #Feature     | 29                | 0                         | false      |&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------+---------+--------------------+--------------+-------------------+---------------------------+------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| &lt;span style=&#34;color:#f60&#34;&gt;7&lt;/span&gt;                   | &lt;span style=&#34;color:#0f0&#34;&gt;#5843ad | null               | #Improvement | 22                | 0                         | false      |&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------+---------+--------------------+--------------+-------------------+---------------------------+------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| &lt;span style=&#34;color:#f60&#34;&gt;1&lt;/span&gt;                   | &lt;span style=&#34;color:#0f0&#34;&gt;#428bca |                    | #Support     | 1                 | 0                         | false      |&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------+---------+--------------------+--------------+-------------------+---------------------------+------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| &lt;span style=&#34;color:#f60&#34;&gt;28&lt;/span&gt;                  | &lt;span style=&#34;color:#0f0&#34;&gt;#f0ad4e | null               | $GH          | 12                | 0                         | false      |&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------+---------+--------------------+--------------+-------------------+---------------------------+------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt;                   | &lt;span style=&#34;color:#0f0&#34;&gt;#f0ad4e |                    | $IFAST       | 4                 | 0                         | false      |&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------+---------+--------------------+--------------+-------------------+---------------------------+------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| &lt;span style=&#34;color:#f60&#34;&gt;25&lt;/span&gt;                  | &lt;span style=&#34;color:#0f0&#34;&gt;#ff0000 | null               | 1-Critical   | 7                 | 0                         | false      |&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------+---------+--------------------+--------------+-------------------+---------------------------+------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| &lt;span style=&#34;color:#f60&#34;&gt;2&lt;/span&gt;                   | &lt;span style=&#34;color:#0f0&#34;&gt;#ad4363 | null               | 2-Important  | 20                | 0                         | false      |&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------+---------+--------------------+--------------+-------------------+---------------------------+------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| &lt;span style=&#34;color:#f60&#34;&gt;5&lt;/span&gt;                   | &lt;span style=&#34;color:#0f0&#34;&gt;#ad4363 | null               | 3-Normal     | 18                | 0                         | false      |&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------+---------+--------------------+--------------+-------------------+---------------------------+------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| &lt;span style=&#34;color:#f60&#34;&gt;2&lt;/span&gt;                   | &lt;span style=&#34;color:#0f0&#34;&gt;#d491a5 |                    | 4-Trivial    | 6                 | 0                         | false      |&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------+---------+--------------------+--------------+-------------------+---------------------------+------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt;                   | &lt;span style=&#34;color:#0f0&#34;&gt;#a8d695 | null               | ^In-Progress | 3                 | 1                         | false      |&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------+---------+--------------------+--------------+-------------------+---------------------------+------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;| &lt;span style=&#34;color:#f60&#34;&gt;0&lt;/span&gt;                   | &lt;span style=&#34;color:#0f0&#34;&gt;#69d100 | Completed/Finished | ^Resolved    | 0                 | 1                         | false      |&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+---------------------+---------+--------------------+--------------+-------------------+---------------------------+------------+&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;sample-curl-commands&#34;&gt;Sample CURL commands&lt;/h3&gt;&#xA;&lt;p&gt;&lt;strong&gt;Check the list of Projects&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Protobuf on Docker</title>
      <link>http://abhipandey.com/2016/06/protobuf-on-docker/</link>
      <pubDate>Tue, 28 Jun 2016 23:26:44 +0800</pubDate>
      <guid>http://abhipandey.com/2016/06/protobuf-on-docker/</guid>
      <description>&lt;p&gt;Found it really strange that nobody had mentioned on their blog how to&#xA;compile &lt;code&gt;Protobuf&lt;/code&gt; in python with &lt;strong&gt;C++&lt;/strong&gt; implementation.&lt;/p&gt;&#xA;&lt;p&gt;I had been having a lot of trouble with the compilation of python protobuf.&#xA;After struggling with it for a few months on and off I decided to give &lt;strong&gt;&lt;code&gt;Docker&lt;/code&gt;&lt;/strong&gt;&#xA;a try as I realized that my own Fedora OS may be the one having troubles.&#xA;Thought of starting with &lt;strong&gt;Ubuntu&lt;/strong&gt; Docker as I&amp;rsquo;ve had success with it earlier&#xA;with such compilation scripts. Luckily it all worked out successfully again&#xA;for protobuf.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using TODO in Fedora</title>
      <link>http://abhipandey.com/2016/06/using-todo-in-fedora/</link>
      <pubDate>Wed, 22 Jun 2016 21:17:56 +0800</pubDate>
      <guid>http://abhipandey.com/2016/06/using-todo-in-fedora/</guid>
      <description>&lt;p&gt;I recently started using Fedora for work and had to manage a lot of tasks on various projects.&#xA;The list was big enough and there&amp;rsquo;s no proper support for Evernote in linux, my trusty todo list manager&#xA;or ToDo list manager by AbstractSpoon. Decided to try post-it notes but my list was changing on an&#xA;ad-hoc basis. Finally came across an &lt;a href=&#34;https://extensions.gnome.org/extension/570/todotxt/&#34;&gt;extension Todo.txt&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Turned out this was just what I was looking for. I started putting all of my tasks in it, with proper categorization.&#xA;Behind the scenes it is an extremely simple app which has only two files, both saved in &lt;code&gt;~/.local/share/todo.txt/&lt;/code&gt; folder.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Getting list of Issues from JIRA under current sprint</title>
      <link>http://abhipandey.com/2016/05/getting-list-of-issues-from-jira-under-current-sprint/</link>
      <pubDate>Fri, 13 May 2016 21:17:56 +0800</pubDate>
      <guid>http://abhipandey.com/2016/05/getting-list-of-issues-from-jira-under-current-sprint/</guid>
      <description>&lt;p&gt;When you are working on &lt;em&gt;Agile Boards in JIRA&lt;/em&gt;, you may want to retrieve&#xA;all the issues related to a particular board or the sprint.&#xA;Usually you&amp;rsquo;d find issues in progress under the dashboard of the sprint itself.&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;Python JIRA&lt;/em&gt; allows you only a few options:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://jira.readthedocs.io/en/latest/api.html#jira.JIRA.incompleted_issues&#34;&gt;incompleted issues&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://jira.readthedocs.io/en/latest/api.html#jira.JIRA.completed_issues&#34;&gt;completed issues&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://jira.readthedocs.io/en/latest/api.html#jira.JIRA.removed_issues&#34;&gt;removed issues&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;As you will also notice from &lt;a href=&#34;https://jira.readthedocs.io/en/latest/api.html#jira.JIRA.sprints&#34;&gt;jira docs&lt;/a&gt;&#xA;the &lt;code&gt;sprints&lt;/code&gt; function in there only provides you sprints.&lt;/p&gt;&#xA;&lt;p&gt;What it fails to provide is the issues under the sprint&#xA;for which work through a different subquery under the hood.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How to setup a local pypi mirror</title>
      <link>http://abhipandey.com/2016/02/how-to-setup-a-local-pypi-mirror/</link>
      <pubDate>Thu, 04 Feb 2016 15:02:07 +0000</pubDate>
      <guid>http://abhipandey.com/2016/02/how-to-setup-a-local-pypi-mirror/</guid>
      <description>&lt;p&gt;It is quite easy to set up a local pypi server.&lt;/p&gt;&#xA;&lt;p&gt;Some details can be found &lt;a href=&#34;https://pip.pypa.io/en/latest/user_guide/#installing-from-local-packages&#34;&gt;here&lt;/a&gt;.&#xA;You can also use &lt;a href=&#34;http://doc.devpi.net/latest/quickstart-pypimirror.html&#34;&gt;devpi&lt;/a&gt; if you prefer but it&#xA;seems overly complicated for a job that is easily achieved by pip.&lt;/p&gt;&#xA;&lt;p&gt;Let&amp;rsquo;s look at how to use &lt;code&gt;pip&lt;/code&gt; for local installation.&#xA;Firstly, it is possible to install all requirements beforehand in a separate directory.&#xA;We can use the following commands:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip install --download DIR -r requirements.txt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If you prefer wheel, then use the following:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Lambda Basics with Python using Github Webhooks or API Gateway</title>
      <link>http://abhipandey.com/2015/11/lambda-basics-with-python-using-github-webhooks-or-api-gateway/</link>
      <pubDate>Wed, 04 Nov 2015 07:49:00 +0000</pubDate>
      <guid>http://abhipandey.com/2015/11/lambda-basics-with-python-using-github-webhooks-or-api-gateway/</guid>
      <description>&lt;p&gt;I recently needed to call a command whenever there was a push on my Github repo.&#xA;Since this was related to AWS tasks, I figured &lt;code&gt;aws lambda&lt;/code&gt; is a good candidate.&#xA;Here I will talk about the steps I took to enable all of this using aws lambda, python.&#xA;As a side note, I will also elaborate on using API gateway to call upon the lambda itself.&lt;/p&gt;&#xA;&lt;p&gt;In a nutshell, what I will talk about:&lt;/p&gt;</description>
    </item>
    <item>
      <title>Elastic Beanstalk Deployment Automation</title>
      <link>http://abhipandey.com/2015/09/elastic-beanstalk-deployment-automation/</link>
      <pubDate>Fri, 04 Sep 2015 00:17:10 +0800</pubDate>
      <guid>http://abhipandey.com/2015/09/elastic-beanstalk-deployment-automation/</guid>
      <description>&lt;p&gt;We are going to talk about a setup where &lt;strong&gt;all you need to do it &lt;em&gt;commit&lt;/em&gt; your code and all the rest of the steps from unit tests to deployment can be taken care of by some externally hosted cloud platform that provides continuous integration.&lt;/strong&gt;&#xA;In my case, it is going to be &lt;code&gt;Shippable&lt;/code&gt; that I am using as a sample but you can use almost anything like &lt;code&gt;TravisCI&lt;/code&gt; or &lt;code&gt;codeship&lt;/code&gt;, for example.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Multiple Virtual Environments in Docker</title>
      <link>http://abhipandey.com/2015/09/multiple-virtual-environments-in-docker/</link>
      <pubDate>Thu, 03 Sep 2015 22:33:33 +0800</pubDate>
      <guid>http://abhipandey.com/2015/09/multiple-virtual-environments-in-docker/</guid>
      <description>&lt;p&gt;It may seem like a daunting task to have multiple python projects running in their own virtual environments in docker as you want to manage the running of the tasks from a single source - let&amp;rsquo;s say &lt;code&gt;supervisord&lt;/code&gt;.&#xA;However, all that is required here is to know that python automatically picks up the location of the virtual environments if you provide full path to the virtual environment&amp;rsquo;s python.&lt;/p&gt;&#xA;&lt;p&gt;For example, in my docker environment, I have virtual environment install at the following location:&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
